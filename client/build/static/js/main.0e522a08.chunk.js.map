{"version":3,"sources":["images/Login.svg","images/Graph.svg","images/PageNotFound.svg","images/Authentication.svg","components/DialogBox/DialogBox.js","components/UtilityFunctions/Request.js","components/NavBar/NavBar.js","components/Login/useForm.js","components/Spinner.js","components/Login/Login.js","components/Drawer/Drawer.js","components/Graphs/GraphTooltip.js","components/Graphs/AreaChart.js","components/Graphs/BarChart.js","components/Home/NoData.js","components/Home/Home.js","components/MobileEditMenu.js","components/SnackBar/SnackContext.js","components/Employee/Employee.js","components/Transactions/useTransactionForm.js","components/Transactions/TransactionForm.js","components/Transactions/TransactionHistory.js","components/Transactions/Transaction.js","components/Inventory/InventoryTable.js","components/Inventory/ExpiryTable.js","components/Inventory/Inventory.js","components/Register/useRegisterForm.js","components/Register/Register.js","components/UpdateProduct/useUpdateProductForm.js","components/UpdateProduct/UpdateProductForm.js","components/SnackBar/Snackbar.js","components/Container/Container.js","components/PageNotFound.js","components/UnAuthorizedAccess.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DialogBox","open","number","handleClose","selectedRow","handleDelete","handleClick","title","content","name","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","getEndPoint","req","config","history","a","axios","get","catch","error","response","status","push","Promise","reject","postEndPoint","formData","post","defaultProps","useStyles","makeStyles","theme","root","flexGrow","menuButton","display","isLoggedIn","marginRight","spacing","button","textDecoration","textTransform","fontSize","NavBar","mobileOpen","setMobileOpen","tabletOpen","setTabletOpen","location","useLocation","useTheme","tablet","useMediaQuery","breakpoints","only","pathname","classes","className","AppBar","position","Toolbar","Hidden","mdUp","IconButton","edge","Typography","variant","AlertDialog","React","useState","setOpen","useHistory","localStorage","removeItem","console","log","useForm","email","password","values","setValues","showPassword","setShowPassword","errors","setError","isInvalidCred","setIsInvalidCred","isSubmitting","setIsSubmitting","isLoading","setIsLoading","apiFetch","data","setItem","auth_token","res","is_staff","useEffect","FormData","append","prevState","handleChange","event","persist","target","value","handleSubmit","preventDefault","errors1","password1","email1","test","length","validateInputs","toggleShowPassword","backdrop","zIndex","drawer","Spinner","Backdrop","CircularProgress","justifyContent","alignItems","minHeight","formContainer","flex","height","flexDirection","form","width","marginTop","padding","down","maxWidth","paper","margin","borderRadius","boxShadow","overflow","img","marginBottom","heading","fontWeight","invalid","props","Login","Paper","xsDown","src","illustration","alt","smUp","noValidate","onSubmit","autoComplete","TextField","required","type","label","onChange","helperText","InputProps","endAdornment","InputAdornment","tabIndex","data-testid","up","flexShrink","drawerPaper","tab","overflowX","link","icons","palette","primary","light","listIcon","minWidth","marginLeft","listText","paddingTop","text","veryDark","drawerHeader","mixins","toolbar","NavDrawer","links","labels","list","setList","handleDrawerToggle","listIcons","getItem","List","map","index","to","key","ListItem","ListItemIcon","ListItemText","Drawer","ModalProps","keepMounted","CustomTooltip","withStyles","tooltip","backgroundColor","border","textAlign","typography","pxToRem","Tooltip","GraphTooltip","children","placement","circle","fill","stroke","strokeWidth","svg","AreaChart","isMobile","svgRef","useRef","axisBottomRef","axisLeftRef","radius","currentLength","x","d3","domain","d","date","range","y","nice","line","curve","area","y0","y1","current","select","datum","attr","node","getTotalLength","transition","duration","ease","selectAll","delay","i","pathLength","Math","sqrt","call","tickFormat","circles","toDateString","slice","Divider","viewBox","preserveAspectRatio","ref","textAnchor","transform","rect","BarChart","bandwidth","ticks","rects","container","NoData","setData","Total","earned","sold","spent","bought","Munch","Kitkat","Lays","Chips","Milk","Bag","Chocolate","Water","Bread","graph","graphContainer","Home","salesAreaData","setSalesAreaData","salesBarData","setSalesBarData","areaType","setAreaType","barType","setBarType","t1","t2","Object","entries","forEach","val","t3","t4","Date","MenuItem","menuItem","MobileEditMenu","handleEdit","row","anchorEl","setAnchorEl","handleMenuClose","option","param","currentTarget","menuIcon","elevation","Boolean","SnackContext","createContext","SnackContextProvider","message","action","actionParams","snack","setSnack","Provider","table","dark","darkGray","fab","bottom","right","firstColumn","paddingRight","paddingLeft","Employee","employeeList","setEmployeeList","deletedRow","setDeletedRow","setSelectedRow","handleClickOpen","useContext","genderMapper","M","F","Other","first_name","last_name","age","gender","indexOf","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","hover","includes","Fab","productsList","setProductsList","productName","quantity","price","expiryDate","product","productDetails","setProductDetails","latest_selling_price","upperLimit","upper_limit","lowerLimit","lower_limit","apiPost","products","created","sellingPrice","loose","every","v","newProductDetails","newDetails","currProduct","find","temp","productErr","quantityErr","priceErr","Number","handleAddProduct","handleProductChange","newValue","inputValue","matchedProduct","filter","createFilterOptions","gridContainer","gridTemplateColumns","gridColumn","justifySelf","addProduct","paperHeading","formHeading","Form","buy","Autocomplete","filterOptions","options","params","filtered","getOptionLabel","renderOption","freeSolo","style","renderInput","concat","getOptionSelected","inputProps","min","now","toISOString","InputLabelProps","shrink","startIcon","TransactionHistory","transactionList","setTransactionList","date_time","transaction","reduce","acc","obj","rate","in_or_out","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","opacity","Tab","disableRipple","TabPanel","other","component","role","hidden","Box","py","Transaction","setTab","gutterBottom","InventoryTable","inventoryList","setInventoryList","delete","tableContainer","ExpiryTable","expiryList","setExpiryList","Product","daysLeft","Inventory","firstName","lastName","confirmPassword","isStaff","showConfirmPassword","setConfirmPassword","invalidCred","setInvalidCred","responseError","err","keys","toggleShowconfirmPassword","radio","Register","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","looseVal","UpdateProduct","state","SimpleSnackbar","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","size","AdminRoute","path","rest","isAdmin","render","from","Container","exact","PageNotFound","UnAuthorizedAccess","PrivateRoute","tokenExists","Routes","createMuiTheme","main","background","default","fontFamily","join","factor","App","ThemeProvider","CssBaseline","window","hostname","match","defaults","baseURL","interceptors","request","use","tokenConfig","token","headers","Authorization","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e522a08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Login.b498e69b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Graph.fa22f606.svg\";","module.exports = __webpack_public_path__ + \"static/media/PageNotFound.40eebd6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Authentication.92768638.svg\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { PropTypes } from 'prop-types';\n\nexport default function DialogBox({\n  open,\n  number,\n  handleClose,\n  selectedRow,\n  handleDelete,\n  handleClick,\n}) {\n  let title = '';\n  let content = '';\n  if (number === '1') {\n    title = `Delete ${selectedRow.name}?`;\n    content = `Are you sure you want to delete ${selectedRow.name}?`;\n  } else if (number === '2') {\n    title = 'Are you sure you wish to logout?';\n    content = 'If you Agree, you will be logged out from all devices...';\n  }\n\n  const handleDialog = () => {\n    if (number === '1') {\n      handleDelete(selectedRow);\n      handleClose();\n    } else if (number === '2') {\n      handleClick();\n    }\n  };\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            {content}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Disagree\n          </Button>\n          <Button onClick={handleDialog} color='secondary' autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nDialogBox.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleClick: PropTypes.func,\n  handleDelete: PropTypes.func,\n  // eslint-disable-next-line react/forbid-prop-types\n  selectedRow: PropTypes.object,\n  number: PropTypes.string.isRequired,\n};\n\nDialogBox.defaultProps = {\n  handleDelete: null,\n  handleClick: null,\n  selectedRow: null,\n};\n","import axios from 'axios';\r\n\r\nexport async function getEndPoint(req, config, history) {\r\n  // get request\r\n\r\n  const response = await axios.get(req, config).catch(error => {\r\n    if (error.response.status === 401) {\r\n      history.push('/unauthorized');\r\n    }\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  // Return empty array to avoid mapping error\r\n  if (response != null) {\r\n    return response;\r\n  }\r\n  return [];\r\n}\r\n\r\nexport async function postEndPoint(req, formData, config, history) {\r\n  // post request\r\n  const response = await axios.post(req, formData, config).catch(error => {\r\n    if (error.response.status === 401) {\r\n      history.push('/unauthorized');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  });\r\n  // Return empty array to avoid mapping error\r\n  if (response != null) {\r\n    return response;\r\n  }\r\n  return [];\r\n}\r\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Hidden,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport DialogBox from '../DialogBox/DialogBox';\nimport { postEndPoint } from '../UtilityFunctions/Request';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    display: isLoggedIn => (isLoggedIn ? 'block' : 'none'),\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    textDecoration: 'none',\n    textTransform: 'capitalize',\n    fontSize: '1rem',\n  },\n}));\n\nconst NavBar = ({ mobileOpen, setMobileOpen, tabletOpen, setTabletOpen }) => {\n  // used to check current url\n  const location = useLocation();\n\n  const theme = useTheme();\n  // true if in tablet mode\n  const tablet = useMediaQuery(theme.breakpoints.only('sm'));\n  const isLoggedIn = location.pathname !== '/login';\n  const classes = useStyles(isLoggedIn);\n\n  // handle opening and closing of drawer\n  const handleDrawerToggle = () => {\n    if (tablet) {\n      setTabletOpen(!tabletOpen);\n    } else {\n      setMobileOpen(!mobileOpen);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='fixed'>\n        <Toolbar>\n          <Hidden mdUp>\n            <IconButton\n              edge='start'\n              className={classes.menuButton}\n              color='inherit'\n              onClick={handleDrawerToggle}\n            >\n              {tabletOpen ? <ChevronLeftIcon /> : <MenuIcon />}\n            </IconButton>\n          </Hidden>\n          <Typography variant='h6' className={classes.title}>\n            Inventory Management Web App\n          </Typography>\n\n          <AlertDialog />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nNavBar.propTypes = {\n  mobileOpen: PropTypes.bool.isRequired,\n  tabletOpen: PropTypes.bool.isRequired,\n  setMobileOpen: PropTypes.func.isRequired,\n  setTabletOpen: PropTypes.func.isRequired,\n};\n\nexport default NavBar;\n\n// Confirms user logut.\nfunction AlertDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  // used to check current url\n  const location = useLocation();\n  // used to programmatically change url\n  const history = useHistory();\n  // true if in tablet mode\n\n  const isLoggedIn = location.pathname !== '/login';\n\n  // function to handle logout\n  // token is passed in header to server and then removed from localStorage\n  // then user is redirected to login page\n  const handleClick = async () => {\n    if (isLoggedIn) {\n      try {\n        const data = '';\n        await postEndPoint('/auth/token/logout', data, null, history);\n        localStorage.removeItem('token');\n        localStorage.removeItem('isStaff');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    history.push('/login');\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <>\n          {' '}\n          <Button color='inherit' onClick={handleClickOpen}>\n            {isLoggedIn ? 'Logout' : 'Login'}\n          </Button>\n          <DialogBox\n            open={open}\n            handleClose={handleClose}\n            handleClick={handleClick}\n            number='2'\n          />\n        </>\n      ) : null}\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getEndPoint, postEndPoint } from '../UtilityFunctions/Request';\n\n// custom hook for form state management\nconst useForm = () => {\n  // function to validate inputs, returns the error statements\n  const validateInputs = values => {\n    let errors1 = false;\n    let password1 = ' ';\n    let email1 = ' ';\n\n    if (values.email === '') {\n      errors1 = true;\n      email1 = 'Please fill out this field';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors1 = true;\n      email1 = 'Please enter a valid email';\n    }\n    if (values.password === '') {\n      errors1 = true;\n      password1 = 'Please fill out this field';\n    } else if (values.password.length < 5) {\n      errors1 = true;\n      password1 = 'Password should have more than 5 characters';\n    }\n\n    return {\n      errors: errors1,\n      email: email1,\n      password: password1,\n    };\n  };\n\n  // values of email and password\n  const [values, setValues] = useState({ email: '', password: '' });\n\n  // toggle to show password on password input\n  const [showPassword, setShowPassword] = useState(false);\n\n  // error messages to be added to the inputs\n  const [error, setError] = useState({\n    errors: false,\n    email: ' ',\n    password: ' ',\n  });\n  // true if Credentials entered arent valid. value depends on the response from server\n  const [isInvalidCred, setIsInvalidCred] = useState(false);\n\n  // true only if submit button is pressed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  // true when waiting for an response from API\n  const [isLoading, setIsLoading] = useState(false);\n\n  // used to programmatically change the url\n  const history = useHistory();\n\n  // function to post the credentials to the server. if credentials are valid then we get a token,\n  // which is stored in localStorage and then user is redirected to homepage.\n  // otherwise isInvalidCred is set to true\n\n  const apiFetch = async formData => {\n    try {\n      setIsLoading(true);\n      const response = await postEndPoint(\n        '/auth/token/login/',\n        formData,\n        null,\n        history\n      );\n\n      const { data } = response;\n      localStorage.setItem('token', data.auth_token);\n      // call API to check if current user is admin\n      const res = await getEndPoint('/auth/users/me/', null, history);\n      // add the is_staff variable got fro API to localStorage\n      localStorage.setItem('isStaff', res.data.is_staff);\n      setIsLoading(false);\n      history.push('/');\n    } catch (e) {\n      setIsLoading(false);\n      setIsInvalidCred(true);\n    }\n  };\n\n  useEffect(() => {\n    // only runs if there are no errors and submit button is pressed\n    // isSubmitting is used to avoid running on initial render\n    if (!error.errors && isSubmitting) {\n      const formData = new FormData();\n      formData.append('email', values.email);\n      formData.append('password', values.password);\n      // post data to server\n      apiFetch(formData);\n      setIsSubmitting(false);\n      // reset inputs\n      setValues(prevState => ({ ...prevState, email: '', password: '' }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isSubmitting]);\n\n  // function to toggle show password\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  // function to handle submit\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setError(validateInputs(values));\n    setIsSubmitting(true);\n  };\n  // function to handle any change in inputs\n  const handleChange = event => {\n    // Use event.persist() to stop event pooling done by react\n    event.persist();\n    setValues(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    error,\n    isInvalidCred,\n    values,\n    showPassword,\n    toggleShowPassword,\n    isLoading,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\nimport { Backdrop, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function Spinner() {\n  const classes = useStyles();\n\n  return (\n    <Backdrop className={classes.backdrop} open>\n      <CircularProgress color='inherit' />\n    </Backdrop>\n  );\n}\n","import React from 'react';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  makeStyles,\n  Button,\n  InputAdornment,\n  IconButton,\n  Hidden,\n} from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport illustration from '../../images/Login.svg';\nimport useForm from './useForm';\nimport Spinner from '../Spinner';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '100vh',\n  },\n  formContainer: {\n    flex: '1 1 30rem',\n    height: '26rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(0, 5),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(0, 2),\n    },\n    '& .MuiTextField-root': {\n      marginTop: theme.spacing(1),\n      width: '100%',\n      maxWidth: '20rem',\n      [theme.breakpoints.down('xs')]: {\n        maxWidth: '15rem',\n      },\n    },\n  },\n  paper: {\n    maxWidth: '70rem',\n    height: '35rem',\n    margin: theme.spacing(2),\n    marginTop: '6rem',\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '10px',\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\n    overflow: 'hidden',\n    [theme.breakpoints.down('xs')]: {\n      width: '30rem',\n      height: '38rem',\n      alignItems: 'flex-start',\n    },\n  },\n  img: {\n    flex: '1 1 35rem',\n    maxWidth: '50%',\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      width: '15rem',\n      marginBottom: theme.spacing(2),\n    },\n  },\n  heading: {\n    fontWeight: '700',\n    marginBottom: theme.spacing(4),\n  },\n  button: {\n    width: '100%',\n    maxWidth: '18rem',\n    height: '3rem',\n    borderRadius: '2rem',\n    fontSize: '1.5rem',\n    fontWeight: '700',\n    marginTop: theme.spacing(1.5),\n    textTransform: 'capitalize',\n    boxShadow: '0 5px 65px rgba(0,0,0,0.1)',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '12rem',\n    },\n  },\n  invalid: {\n    display: props => (props.invalid ? 'block' : 'none'),\n  },\n}));\n\nconst Login = () => {\n  // Use custom hook for form state management\n  const {\n    handleChange,\n    handleSubmit,\n    error,\n    isInvalidCred,\n    values,\n    showPassword,\n    toggleShowPassword,\n    isLoading,\n  } = useForm();\n\n  const classes = useStyles({ invalid: isInvalidCred });\n\n  return (\n    <>\n      {isLoading ? <Spinner /> : null}\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <Hidden xsDown>\n            <img\n              src={illustration}\n              alt='Login illustration'\n              className={classes.img}\n            />\n          </Hidden>\n          <div className={classes.formContainer}>\n            <Typography variant='h3' className={classes.heading}>\n              Login\n            </Typography>\n            <Hidden smUp>\n              <img\n                src={illustration}\n                alt='Login illustration'\n                className={classes.img}\n              />\n            </Hidden>\n            <Typography variant='h6' color='error' className={classes.invalid}>\n              Invalid email or password. Please try again\n            </Typography>\n            <form\n              noValidate\n              onSubmit={handleSubmit}\n              autoComplete='off'\n              className={classes.form}\n            >\n              <TextField\n                required\n                variant='filled'\n                id='email-input'\n                name='email'\n                type='email'\n                label='Email'\n                value={values.email}\n                onChange={handleChange}\n                error={!(error.email === ' ')}\n                helperText={error.email}\n              />\n              <TextField\n                required\n                variant='filled'\n                id='password-input'\n                name='password'\n                type={showPassword ? 'text' : 'password'}\n                label='Password'\n                value={values.password}\n                onChange={handleChange}\n                error={!(error.password === ' ')}\n                helperText={error.password}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position='end'>\n                      <IconButton onClick={toggleShowPassword} tabIndex='-1'>\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Button\n                type='submit'\n                color='primary'\n                variant='contained'\n                className={classes.button}\n                data-testid='submit'\n              >\n                Login\n              </Button>\n            </form>\n          </div>\n        </Paper>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Drawer,\n  Hidden,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n} from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport ListIcon from '@material-ui/icons/List';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\n\nconst drawerWidth = 230;\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n    zIndex: 0,\n    [theme.breakpoints.only('sm')]: {\n      width: props => (props.tab ? drawerWidth : '4.5rem'),\n      overflowX: 'hidden',\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  icons: {\n    fontSize: '2rem',\n    color: theme.palette.primary.light,\n  },\n  listIcon: {\n    minWidth: '2rem',\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(1),\n    [theme.breakpoints.only('sm')]: {\n      marginRight: props => (props.tab ? theme.spacing(2) : theme.spacing(3)),\n      marginLeft: props => (props.tab ? theme.spacing(1) : theme.spacing(0.5)),\n    },\n  },\n  listText: {\n    paddingTop: theme.spacing(0.5),\n    '& .MuiTypography-body1': {\n      fontSize: '1.25rem',\n      color: theme.text.color.veryDark,\n    },\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nfunction NavDrawer({ mobileOpen, setMobileOpen, tabletOpen }) {\n  const classes = useStyles({ tab: tabletOpen });\n\n  // links and labels for each link in drawer\n  const [list, setList] = useState({\n    links: ['/', '/inventory', '/transaction'],\n    labels: ['Home', 'Inventory', 'Transactions'],\n  });\n\n  // function to handle drawer state on mobile\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  // array of drawer icons\n  const listIcons = [\n    <HomeIcon className={classes.icons} />,\n    <ListIcon className={classes.icons} />,\n    <PersonIcon className={classes.icons} />,\n    <ReceiptIcon className={classes.icons} />,\n  ];\n\n  useEffect(() => {\n    // Add Admin protected links to the list only if isStaff is true\n    const isAdmin = localStorage.getItem('isStaff');\n    if (isAdmin === 'true') {\n      setList({\n        labels: ['Home', 'Inventory', 'Employees', 'Transactions'],\n        links: ['/', '/inventory', '/employee', '/transaction'],\n      });\n    }\n  }, []);\n\n  const drawer = (\n    <div>\n      <List>\n        {list.labels.map((text, index) => (\n          <Link\n            to={list.links[index]}\n            className={classes.link}\n            key={text}\n            onClick={handleDrawerToggle}\n          >\n            <ListItem button key={text}>\n              <ListItemIcon className={classes.listIcon}>\n                {listIcons[index]}\n              </ListItemIcon>\n              <ListItemText primary={text} className={classes.listText} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <nav className={classes.drawer}>\n      <Hidden smUp>\n        <Drawer\n          variant='temporary'\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerToggle}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown>\n        <Drawer\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          variant='permanent'\n          open\n        >\n          <div className={classes.toolbar} />\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n}\n\nNavDrawer.propTypes = {\n  mobileOpen: PropTypes.bool.isRequired,\n  tabletOpen: PropTypes.bool.isRequired,\n  setMobileOpen: PropTypes.func.isRequired,\n};\n\nexport default NavDrawer;\n","import React from 'react';\nimport { Tooltip, withStyles } from '@material-ui/core';\nimport { PropTypes } from 'prop-types';\n\nconst CustomTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#fff',\n    color: 'rgba(0, 0, 0, 0.87)',\n    width: 100,\n    borderRadius: '0.5rem',\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.2)',\n    fontSize: '1rem',\n    fontWeight: 'bold',\n    border: '1px solid #dadde9',\n    padding: '0.5rem',\n    textAlign: 'center',\n    '& h4': {\n      fontSize: theme.typography.pxToRem(12),\n      fontWeight: 'normal',\n      marginBottom: '2px',\n    },\n    '& *': {\n      margin: '5px',\n    },\n  },\n}))(Tooltip);\n\nconst GraphTooltip = ({ children, title }) => {\n  return (\n    <CustomTooltip title={title} placement='top'>\n      {children}\n    </CustomTooltip>\n  );\n};\n\nGraphTooltip.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element).isRequired,\n  ]).isRequired,\n  title: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element).isRequired,\n  ]).isRequired,\n};\n\nexport default GraphTooltip;\n","import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport {\n  Divider,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { PropTypes } from 'prop-types';\nimport GraphTooltip from './GraphTooltip';\n\nconst useStyles = makeStyles(theme => ({\n  circle: {\n    fill: '#64C6F7',\n    stroke: 'white',\n    strokeWidth: '3',\n    [theme.breakpoints.only('xs')]: {\n      strokeWidth: '2',\n    },\n    '&:hover': {\n      fill: '#4796bd',\n    },\n  },\n  svg: {\n    '& #line': {\n      fill: 'none',\n      stroke: '#64C6F7',\n      strokeWidth: '5',\n    },\n    '& #area': {\n      fill: '#cceeff',\n    },\n    '& text': {\n      fill: '#5a5a5a',\n    },\n  },\n}));\n\nconst AreaChart = ({ data, type }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n\n  // refs for DOM elements\n  const svgRef = useRef(null);\n  const axisBottomRef = useRef(null);\n  const axisLeftRef = useRef(null);\n\n  // constants\n  const width = isMobile ? 600 : 1400;\n  const height = isMobile ? 200 : 350;\n  const radius = isMobile ? 5 : 8;\n  const transitionDuration = 3000;\n\n  const margin = { top: 20, right: 40, bottom: 80, left: 80 };\n\n  useEffect(() => {\n    // keeps the length of the covered path\n    let currentLength = 0;\n\n    // set up the X Scale\n    const x = d3\n      .scaleTime()\n      .domain(d3.extent(data, d => d.date))\n      .range([margin.left, width - margin.right]);\n\n    // set up the Y Scale\n    const y = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => +d.value)])\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    // Line generator\n    const line = d3\n      .line()\n      .x(d => x(d.date))\n      .y(d => y(d.value))\n      .curve(d3.curveCatmullRom);\n\n    // Area generator\n    const area = d3\n      .area()\n      .x(d => x(d.date))\n      .y0(y(0))\n      .y1(d => y(d.value))\n      .curve(d3.curveCatmullRom);\n\n    const svg = d3.select(svgRef.current);\n\n    // add data to area\n    svg\n      .select('#area')\n      .datum(data)\n      .attr('d', area);\n\n    // add data to line\n    svg\n      .select('#line')\n      .datum(data)\n      .attr('d', line);\n\n    // get total length of the line path\n    const length = d3\n      .select(svgRef.current)\n      .select('#line')\n      .node()\n      .getTotalLength();\n\n    // add line transition\n    svg\n      .select('path')\n      .attr('stroke-dasharray', `${length} ${length}`)\n      .attr('stroke-dashoffset', length)\n      .transition()\n      .duration(transitionDuration)\n      .ease(d3.easeLinear)\n      .attr('stroke-dashoffset', 0);\n\n    // add circle with transition\n    svg\n      .selectAll('circle')\n      .data(data)\n      .attr('cx', d => x(d.date))\n      .attr('cy', d => y(d.value))\n      .attr('r', radius)\n      .attr('opacity', 0)\n      .transition()\n      .delay((d, i) => {\n        if (i === 0) return 0;\n\n        const pathLength = Math.sqrt(\n          (x(data[i].date) - x(data[i - 1].date)) ** 2 +\n            (y(data[i].value) - y(data[i - 1].value)) ** 2\n        );\n        currentLength += pathLength;\n        return (transitionDuration * currentLength) / length;\n      })\n      .attr('opacity', 1);\n\n    // X Axis\n    d3.select(axisBottomRef.current)\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .attr('color', '#5a5a5a')\n      .call(d3.axisBottom(x).tickFormat(d3.timeFormat('%b')));\n\n    // Y Axis\n    d3.select(axisLeftRef.current)\n      .attr('transform', `translate(${margin.left},0)`)\n      .attr('color', '#5a5a5a')\n      .call(d3.axisLeft(y));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, width]);\n\n  // circles with tooltips\n  const circles = data.map(d => (\n    <GraphTooltip\n      title={\n        // eslint-disable-next-line react/jsx-wrap-multilines\n        <>\n          <h4>{`${d.date.toDateString().slice(4)}`}</h4>\n          <Divider />\n          <p>{`${d.value}K ₹`}</p>\n        </>\n      }\n      key={d.date}\n    >\n      <circle key={d.date} className={classes.circle} />\n    </GraphTooltip>\n  ));\n\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      width={isMobile ? width : null}\n      preserveAspectRatio='xMinYMin'\n      ref={svgRef}\n      className={classes.svg}\n    >\n      <path id='line' />\n      <path id='area' />\n      <g ref={axisBottomRef} />\n      <g ref={axisLeftRef} />\n      {circles}\n      <text\n        textAnchor='middle'\n        transform={`translate(${width / 2},${height - 20})`}\n      >\n        Date\n      </text>\n      <text\n        textAnchor='middle'\n        transform='rotate(-90)'\n        y='30'\n        x={0 - height / 2 + margin.bottom / 2}\n      >\n        {`${type} (₹)`}\n      </text>\n    </svg>\n  );\n};\n\nAreaChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default AreaChart;\n","import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport {\n  makeStyles,\n  Divider,\n  useTheme,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { PropTypes } from 'prop-types';\nimport GraphTooltip from './GraphTooltip';\n\nconst useStyles = makeStyles(() => ({\n  rect: {\n    fill: '#64C6F7',\n    '&:hover': {\n      fill: '#4796bd',\n    },\n  },\n  svg: {\n    '& text': {\n      fill: '#5a5a5a',\n    },\n  },\n}));\n\nconst BarChart = ({ data, type }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n\n  // refs for DOM elements\n  const svgRef = useRef(null);\n  const axisBottomRef = useRef(null);\n  const axisLeftRef = useRef(null);\n\n  // constants\n  const width = isMobile ? 600 : 1400;\n  const height = isMobile ? 200 : 350;\n  const transitionDuration = 3000;\n\n  const margin = { top: 20, right: 40, bottom: 80, left: 80 };\n\n  useEffect(() => {\n    // set up the X Scale\n    const x = d3\n      .scaleBand()\n      .domain(data.map(d => d.name))\n      .range([margin.left, width - margin.right])\n      .padding(0.2);\n\n    // set up the Y Scale\n    const y = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => +d.value)])\n      .nice()\n      .range([height - margin.bottom, margin.top]);\n\n    // add rectangles with transition\n    d3.select(svgRef.current)\n      .selectAll('rect')\n      .data(data)\n      .attr('x', d => x(d.name))\n      .attr('y', y(0))\n      .attr('width', x.bandwidth())\n      .attr('height', height - y(0) - margin.bottom)\n      .transition()\n      .duration(transitionDuration)\n      .attr('y', d => y(d.value))\n      .attr('height', d => height - y(d.value) - margin.bottom)\n      .delay((d, i) => i * 100);\n\n    // X Axis\n    d3.select(axisBottomRef.current)\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .attr('color', '#5a5a5a')\n      .call(d3.axisBottom(x));\n\n    // Y Axis\n    d3.select(axisLeftRef.current)\n      .attr('transform', `translate(${margin.left},0)`)\n      .attr('color', '#5a5a5a')\n      .call(d3.axisLeft(y).ticks(5));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, width]);\n\n  // rectangles with tooltips\n  const rects = data.map(d => (\n    <GraphTooltip\n      title={\n        // eslint-disable-next-line react/jsx-wrap-multilines\n        <>\n          <h4>{`${d.name}`}</h4>\n          <Divider />\n          <p>{`${d.value}K ₹`}</p>\n        </>\n      }\n      key={d.name}\n    >\n      <rect fill='steelblue' key={d.name} className={classes.rect} />\n    </GraphTooltip>\n  ));\n\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      preserveAspectRatio='xMinYMin'\n      width={isMobile ? width : null}\n      ref={svgRef}\n      className={classes.svg}\n    >\n      <g ref={axisBottomRef} />\n      <g ref={axisLeftRef} />\n      {rects}\n      <text\n        textAnchor='middle'\n        transform={`translate(${width / 2},${height - 20})`}\n      >\n        Product\n      </text>\n      <text\n        textAnchor='middle'\n        transform='rotate(-90)'\n        y='30'\n        x={0 - height / 2 + margin.bottom / 2}\n      >\n        {`${type} (₹)`}\n      </text>\n    </svg>\n  );\n};\n\nBarChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default BarChart;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { PropTypes } from 'prop-types';\nimport illustration from '../../images/Graph.svg';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 'calc(100vh - 10rem)',\n    textAlign: 'center',\n  },\n  button: {\n    maxWidth: '18rem',\n    height: '3rem',\n    borderRadius: '1rem',\n    fontWeight: '700',\n    marginTop: theme.spacing(1.5),\n    boxShadow: '0 5px 65px rgba(0,0,0,0.1)',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '12rem',\n    },\n  },\n  img: {\n    maxWidth: '30%',\n    marginBottom: theme.spacing(4),\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '50%',\n    },\n  },\n}));\n\nconst NoData = ({ setData }) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push('/transaction');\n  };\n\n  const useDummyData = () => {\n    const temp = {\n      Total: {\n        Total: {\n          earned: 200.0,\n          sold: 10,\n          spent: 10000.0,\n          bought: 210,\n        },\n        Munch: {\n          earned: 50.0,\n          spent: 200.0,\n          sold: 5,\n          bought: 20,\n        },\n        Kitkat: {\n          earned: 300.0,\n          spent: 100.0,\n          sold: 0,\n          bought: 10,\n        },\n        Lays: {\n          earned: 150.0,\n          spent: 600.0,\n          sold: 5,\n          bought: 40,\n        },\n        Chips: {\n          earned: 200.0,\n          spent: 400.0,\n          sold: 0,\n          bought: 20,\n        },\n        Milk: {\n          earned: 900.0,\n          spent: 700.0,\n          sold: 0,\n          bought: 120,\n        },\n        Bag: {\n          earned: 1500.0,\n          spent: 700.0,\n          sold: 0,\n          bought: 120,\n        },\n        Chocolate: {\n          earned: 300.0,\n          spent: 150.0,\n          sold: 0,\n          bought: 120,\n        },\n        Water: {\n          earned: 200.0,\n          spent: 100.0,\n          sold: 0,\n          bought: 120,\n        },\n        Bread: {\n          earned: 1000.0,\n          spent: 800.0,\n          sold: 0,\n          bought: 120,\n        },\n      },\n      '2020-01': {\n        Total: {\n          earned: 290.0,\n          sold: 10,\n          spent: 380.0,\n          bought: 210,\n        },\n      },\n      '2020-02': {\n        Total: {\n          earned: 310.0,\n          sold: 10,\n          spent: 230.0,\n          bought: 210,\n        },\n      },\n      '2020-03': {\n        Total: {\n          earned: 340.0,\n          sold: 10,\n          spent: 250.0,\n          bought: 210,\n        },\n      },\n      '2020-04': {\n        Total: {\n          earned: 320.0,\n          sold: 10,\n          spent: 280.0,\n          bought: 210,\n        },\n      },\n\n      '2020-05': {\n        Total: {\n          earned: 300.0,\n          sold: 10,\n          spent: 300.0,\n          bought: 210,\n        },\n      },\n      '2020-06': {\n        Total: {\n          earned: 200.0,\n          sold: 10,\n          spent: 100.0,\n          bought: 210,\n        },\n      },\n      '2020-07': {\n        Total: {\n          earned: 355.0,\n          sold: 10,\n          spent: 265.0,\n          bought: 210,\n        },\n      },\n      '2020-08': {\n        Total: {\n          earned: 370.0,\n          sold: 10,\n          spent: 300.0,\n          bought: 210,\n        },\n      },\n      '2020-09': {\n        Total: {\n          earned: 342.0,\n          sold: 10,\n          spent: 296.0,\n          bought: 210,\n        },\n      },\n      '2020-10': {\n        Total: {\n          earned: 321.0,\n          sold: 10,\n          spent: 257.0,\n          bought: 210,\n        },\n      },\n      '2020-11': {\n        Total: {\n          earned: 361.0,\n          sold: 10,\n          spent: 285.0,\n          bought: 210,\n        },\n      },\n      '2020-12': {\n        Total: {\n          earned: 398.0,\n          sold: 10,\n          spent: 302.0,\n          bought: 210,\n        },\n      },\n    };\n    setData(temp);\n  };\n\n  return (\n    <div className={classes.container}>\n      <img src={illustration} alt='illustration' className={classes.img} />\n      <h1>More data needed to display graphs</h1>\n      <h3>\n        Atleast 2 months data needed to display the graphs. Perform transactions\n        to generate data\n      </h3>\n      <Button\n        type='button'\n        color='primary'\n        variant='contained'\n        className={classes.button}\n        onClick={handleClick}\n      >\n        Transaction\n      </Button>\n      <Button\n        type='button'\n        color='primary'\n        variant='outlined'\n        className={classes.button}\n        onClick={useDummyData}\n      >\n        View with Dummy Data\n      </Button>\n    </div>\n  );\n};\n\nNoData.propTypes = {\n  setData: PropTypes.func.isRequired,\n};\n\nexport default NoData;\n","import React, { useEffect, useState } from 'react';\nimport { Typography, Paper, TextField, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AreaChart from '../Graphs/AreaChart';\nimport BarChart from '../Graphs/BarChart';\nimport NoData from './NoData';\nimport { getEndPoint } from '../UtilityFunctions/Request';\n\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(2),\n  },\n  graph: {\n    marginBottom: theme.spacing(4),\n  },\n  graphContainer: {\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\n    borderRadius: '10px',\n    padding: '1rem',\n    [theme.breakpoints.only('xs')]: {\n      overflow: 'scroll',\n      padding: '5px',\n    },\n    '& .MuiTextField-root': {\n      margin: '1rem 2rem',\n      width: '100%',\n      maxWidth: '20rem',\n      [theme.breakpoints.only('sm')]: {\n        margin: '0.5rem 1rem',\n        maxWidth: '14rem',\n      },\n      [theme.breakpoints.only('xs')]: {\n        margin: '0.5rem 1rem',\n        maxWidth: '12rem',\n      },\n    },\n  },\n}));\n\nconst Home = () => {\n  // dummy data\n  const [data, setData] = useState({});\n  const [salesAreaData, setSalesAreaData] = useState([]);\n  const [salesBarData, setSalesBarData] = useState([]);\n\n  const [areaType, setAreaType] = useState('Earned');\n  const [barType, setBarType] = useState('Earned');\n\n  const apiFetch = async () => {\n    try {\n      const response = await getEndPoint('/api/profit/', null, null);\n      setData(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // call API on component load\n  useEffect(() => {\n    apiFetch();\n  }, []);\n\n  // useEffect to set appropriate graphs data after getting data from API\n  useEffect(() => {\n    if (data.Total) {\n      // parse the data to generate data for the bar graph\n      const t1 = [];\n      const t2 = [];\n      Object.entries(data.Total).forEach(val => {\n        const [key, value] = val;\n        if (key !== 'Total') {\n          t1.push({ name: key, value: value.earned });\n          t2.push({ name: key, value: value.spent });\n        }\n      });\n      const barDataType = barType === 'Earned' ? t1 : t2;\n      setSalesBarData(barDataType);\n\n      // parse the data to generate data for the area graph\n      const t3 = [];\n      const t4 = [];\n      Object.entries(data).forEach(val => {\n        const [key, value] = val;\n        if (key !== 'Total') {\n          t3.push({ date: new Date(key), value: value.Total.earned });\n          t4.push({ date: new Date(key), value: value.Total.spent });\n        }\n      });\n      const areaDataType = areaType === 'Earned' ? t3 : t4;\n      setSalesAreaData(areaDataType);\n    }\n  }, [areaType, barType, data]);\n\n  const classes = useStyles();\n\n  const handleAreaChange = event => {\n    setAreaType(event.target.value);\n  };\n\n  const handleBarChange = event => {\n    setBarType(event.target.value);\n  };\n\n  return (\n    <>\n      {salesAreaData.length < 2 ? (\n        <NoData setData={setData} />\n      ) : (\n        <>\n          <div className={classes.graph}>\n            <Typography variant='h4' className={classes.heading}>\n              Sales over time\n            </Typography>\n            <Paper className={classes.graphContainer}>\n              <TextField\n                required\n                variant='filled'\n                id='type-area-input'\n                name='areaType'\n                select\n                label='Graph Type'\n                value={areaType}\n                onChange={handleAreaChange}\n              >\n                <MenuItem key='Earned' value='Earned'>\n                  Earned\n                </MenuItem>\n                <MenuItem key='Spent' value='Spent'>\n                  Spent\n                </MenuItem>\n              </TextField>\n              <AreaChart data={salesAreaData} type={areaType} />\n            </Paper>\n          </div>\n          <div className={classes.graph}>\n            <Typography variant='h4' className={classes.heading}>\n              Sales per product\n            </Typography>\n            <Paper className={classes.graphContainer}>\n              <TextField\n                required\n                variant='filled'\n                id='type-bar-input'\n                name='barType'\n                select\n                label='Graph Type'\n                value={barType}\n                onChange={handleBarChange}\n              >\n                <MenuItem key='Earned' value='Earned'>\n                  Earned\n                </MenuItem>\n                <MenuItem key='Spent' value='Spent'>\n                  Spent\n                </MenuItem>\n              </TextField>\n              <BarChart data={salesBarData} type={barType} />\n            </Paper>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { PropTypes } from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n  menuItem: {\n    '& svg': {\n      marginRight: theme.spacing(1),\n    },\n  },\n}));\n\n// menu for edit and delete actions on mobile\nconst MobileEditMenu = ({ handleDelete, handleEdit, row }) => {\n  // set anchor for menu\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const classes = useStyles();\n\n  // handle menu open\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  // handle menu close by selecting edit or delete action\n  const handleMenuClose = (option, param) => {\n    if (option) {\n      if (option === 'Edit') {\n        handleEdit(param);\n      } else if (option === 'Delete') {\n        handleDelete(param);\n      }\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <IconButton onClick={handleMenuClick}>\n        <MenuIcon className={classes.menuIcon} />\n      </IconButton>\n      <Menu\n        elevation={3}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem\n          onClick={() => {\n            handleMenuClose('Edit', row);\n          }}\n          className={classes.menuItem}\n        >\n          <EditIcon /> Edit\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleMenuClose('Delete', row);\n          }}\n          className={classes.menuItem}\n        >\n          <DeleteIcon /> Delete\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nMobileEditMenu.propTypes = {\n  handleDelete: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  row: PropTypes.object.isRequired,\n};\n\nexport default MobileEditMenu;\n","import React, { createContext, useState } from 'react';\nimport { PropTypes } from 'prop-types';\n\nexport const SnackContext = createContext();\n\nconst SnackContextProvider = ({ children }) => {\n  const [snack, setSnack] = useState({\n    open: false,\n    message: '',\n    action: '',\n    actionParams: '',\n    type: '',\n  });\n\n  return (\n    <SnackContext.Provider value={{ snack, setSnack }}>\n      {children}\n    </SnackContext.Provider>\n  );\n};\n\nSnackContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default SnackContextProvider;\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  TableBody,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Fab,\r\n  IconButton,\r\n  Hidden,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Spinner from '../Spinner';\r\nimport MobileEditMenu from '../MobileEditMenu';\r\nimport { SnackContext } from '../SnackBar/SnackContext';\r\nimport DialogBox from '../DialogBox/DialogBox';\r\nimport { getEndPoint, postEndPoint } from '../UtilityFunctions/Request';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\r\n    textAlign: 'center',\r\n    borderRadius: '10px',\r\n  },\r\n  table: {\r\n    backgroundColor: 'white',\r\n    borderRadius: '10px',\r\n    '& th': {\r\n      backgroundColor: '#e7eff3',\r\n      fontSize: '1.25rem',\r\n      fontWeight: 'bold',\r\n      color: theme.text.color.dark,\r\n      [theme.breakpoints.only('xs')]: {\r\n        fontSize: theme.typography.pxToRem(14),\r\n      },\r\n    },\r\n    '& td': {\r\n      fontSize: '1.5rem',\r\n      color: theme.text.color.darkGray,\r\n      [theme.breakpoints.only('xs')]: {\r\n        fontSize: '1rem',\r\n      },\r\n    },\r\n    '& .MuiTableCell-root': {\r\n      [theme.breakpoints.only('xs')]: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    '& tr.delete': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  heading: {\r\n    fontWeight: '700',\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(4),\r\n  },\r\n  firstColumn: {\r\n    width: '7rem',\r\n    paddingRight: 0,\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: 'initial',\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Employee() {\r\n  // list of employees got from API\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n  // contains the index of the row, if delete is used\r\n  const [deletedRow, setDeletedRow] = useState([]);\r\n  // true when waiting for an response from API\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // dialog box\r\n  const [open, setOpen] = useState(false);\r\n  // row to be selected on clicking the delete icon\r\n  const [selectedRow, setSelectedRow] = useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const { setSnack } = useContext(SnackContext);\r\n\r\n  const apiFetch = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await getEndPoint('/auth/users/', null, history);\r\n      const { data } = response;\r\n      // map genders got from API\r\n      const genderMapper = { M: 'Male', F: 'Female', Other: 'Other' };\r\n      const list = data.map(val => ({\r\n        name: `${val.first_name} ${val.last_name}`,\r\n        age: val.age,\r\n        gender: genderMapper[val.gender],\r\n        email: val.email,\r\n      }));\r\n      setEmployeeList(list);\r\n      setIsLoading(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // call API on component load\r\n  useEffect(() => {\r\n    apiFetch();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // handle click on the FAB\r\n  const handleFabClick = () => {\r\n    history.push('/addemployee');\r\n  };\r\n\r\n  // handle user edit\r\n  const handleEdit = row => {\r\n    console.log(row);\r\n    // TODO implement this when endpoint is ready\r\n    // open the create user form and pass the data as props\r\n  };\r\n\r\n  // handle user delete\r\n  const handleDelete = async row => {\r\n    setIsLoading(true);\r\n    const { email, name } = row;\r\n    setDeletedRow(prevState => [...prevState, employeeList.indexOf(row)]);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('email', email);\r\n      await postEndPoint('/auth/user_delete/', formData, null, history);\r\n      setIsLoading(false);\r\n      // add success snackbar on successful request\r\n      setSnack({\r\n        open: true,\r\n        message: `Succesfully deleted ${name}`,\r\n        action: '',\r\n        actionParams: '',\r\n        type: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <Spinner /> : null}\r\n      <Typography variant='h3' className={classes.heading}>\r\n        Employees\r\n      </Typography>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table className={classes.table} aria-label='simple table'>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Gender</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell align='right'>Age</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {employeeList.map((row, index) => (\r\n                <TableRow\r\n                  key={row.email}\r\n                  hover\r\n                  className={deletedRow.includes(index) ? 'delete' : ''}\r\n                >\r\n                  <TableCell className={classes.firstColumn}>\r\n                    <Hidden xsDown>\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          handleEdit(row);\r\n                        }}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setSelectedRow(row);\r\n                          handleClickOpen();\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Hidden>\r\n                    <Hidden smUp>\r\n                      <MobileEditMenu\r\n                        handleDelete={() => {\r\n                          setSelectedRow(row);\r\n                          handleClickOpen();\r\n                        }}\r\n                        handleEdit={handleEdit}\r\n                        row={row}\r\n                      />\r\n                    </Hidden>\r\n                  </TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell>{row.gender}</TableCell>\r\n                  <TableCell>{row.email}</TableCell>\r\n                  <TableCell align='right'>{row.age}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n\r\n      <DialogBox\r\n        open={open}\r\n        handleClose={handleClose}\r\n        selectedRow={selectedRow}\r\n        handleDelete={handleDelete}\r\n        number='1'\r\n      />\r\n\r\n      <Fab\r\n        color='primary'\r\n        aria-label='add'\r\n        className={classes.fab}\r\n        onClick={handleFabClick}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SnackContext } from '../SnackBar/SnackContext';\nimport { getEndPoint, postEndPoint } from '../UtilityFunctions/Request';\n\nconst useForm = type => {\n  // list of all products got from API\n  const [productsList, setProductsList] = useState([]);\n  // true when waiting for an response from API\n  const [isLoading, setIsLoading] = useState(false);\n\n  // function to validate inputs, returns the error statements\n  const validateInputs = values => {\n    let errors = [];\n    for (let i = 0; i < values.length; i += 1) {\n      errors = [\n        ...errors,\n        { product: ' ', quantity: ' ', price: ' ', expiryDate: ' ' },\n      ];\n    }\n    values.forEach((value, index) => {\n      let productErr = ' ';\n      let quantityErr = ' ';\n      let priceErr = ' ';\n      const expiryErr = ' ';\n\n      if (type === 'Sell' && value.productName) {\n        const { quantity } = productsList.find(\n          product => product.name === value.productName\n        );\n        if (Number(value.quantity) > Number(quantity)) {\n          quantityErr = `Quantity cannot be greater than current stock : - ${quantity}`;\n        }\n      }\n\n      if (value.productName === '') {\n        productErr = 'Please fill out this field';\n      }\n\n      if (value.quantity === '') {\n        quantityErr = 'Please fill out this field';\n      } else if (value.quantity === '0') {\n        quantityErr = 'Quantity cannot be 0';\n      }\n\n      if (value.price === '') {\n        priceErr = 'Please fill out this field';\n      } else if (value.price === '0') {\n        priceErr = 'Price cannot be 0';\n      }\n\n      errors[index] = {\n        product: productErr,\n        quantity: quantityErr,\n        price: priceErr,\n        expiryDate: expiryErr,\n      };\n    });\n    return errors;\n  };\n\n  // values for product name, quantity and price\n  const [values, setValues] = useState([\n    {\n      productName: '',\n      quantity: '',\n      price: '',\n      expiryDate: '',\n    },\n  ]);\n  // error messages to be added to the inputs\n  const [error, setError] = useState([\n    { product: ' ', quantity: ' ', price: ' ', expiryDate: ' ' },\n  ]);\n  // true only if submit button is pressed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [productDetails, setProductDetails] = useState([\n    'Select a product to view details',\n  ]);\n\n  const history = useHistory();\n\n  // fetch the products list from API\n  const apiFetch = async () => {\n    try {\n      setIsLoading(true);\n      const response = await getEndPoint('/api/productlist/', null, history);\n      const { data } = response;\n      const list = data.map(val => ({\n        name: val.name,\n        quantity: val.quantity,\n        price: val.latest_selling_price,\n        id: val.id,\n        upperLimit: val.upper_limit,\n        lowerLimit: val.lower_limit,\n      }));\n      setProductsList(list);\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    apiFetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { setSnack } = useContext(SnackContext);\n  // post data to API\n  const apiPost = async formData => {\n    setIsLoading(true);\n    const products = [];\n    try {\n      if (type === 'Buy') {\n        const response = await postEndPoint(\n          '/api/buy/',\n          formData,\n          null,\n          history\n        );\n        const { data } = response;\n        console.log('Here is response', data);\n        if (data.created) {\n          products.push(data);\n        }\n      } else {\n        const response = await postEndPoint(\n          '/api/sell/',\n          formData,\n          null,\n          history\n        );\n        const { data } = response;\n        console.log('Here is response', data);\n      }\n      setIsLoading(false);\n      if (products.length) {\n        // add success snackbar if new product created\n        const product = products[0];\n        setSnack({\n          open: true,\n          message: `Added ${product.name}`,\n          action: 'EDIT',\n          actionParams: {\n            name: product.name,\n            sellingPrice: product.latest_selling_price,\n            loose: product.loose,\n            id: product.id,\n            upperLimit: product.upper_limit === null ? '' : product.upper_limit,\n            lowerLimit: product.lower_limit === null ? '' : product.upper_limit,\n          },\n        });\n      } else if (type === 'Buy') {\n        // add success snackbar on successful transaction\n        setSnack({\n          open: true,\n          message: `Succesfully bought items`,\n          action: '',\n          actionParams: '',\n          type: 'success',\n        });\n      } else if (type === 'Sell') {\n        // add success snackbar on successful transaction\n        setSnack({\n          open: true,\n          message: `Succesfully sold items`,\n          action: '',\n          actionParams: '',\n          type: 'success',\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    const noErr = error.every(val => Object.values(val).every(v => v === ' '));\n    // only runs if there are no errors and submit button is pressed\n    // isSubmitting is used to avoid running on initial render\n    if (noErr && isSubmitting) {\n      values.forEach(val => {\n        const formData = new FormData();\n        formData.append('name', val.productName);\n        formData.append('quantity', val.quantity);\n        formData.append('expiry', val.expiryDate);\n        if (type === 'Buy') {\n          formData.append('avg_cost_price', val.price);\n        } else {\n          formData.append('latest_selling_price', val.price);\n        }\n        // post data to server\n        console.log(...formData);\n        apiPost(formData);\n      });\n      setIsSubmitting(false);\n      // reset inputs\n      setValues([{ productName: '', quantity: '', price: '', expiryDate: '' }]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isSubmitting]);\n\n  useEffect(() => {\n    const newProductDetails = [];\n    values.forEach((value, index) => {\n      let newDetails = 'Select a product to view details';\n      if (value.productName !== '') {\n        const currProduct = productsList.find(\n          product => product.name === value.productName\n        );\n        if (currProduct) {\n          if (type === 'Buy') {\n            newDetails = `${currProduct.quantity} in inventory ${\n              currProduct.upperLimit === null\n                ? ''\n                : `, ${currProduct.upperLimit} Recommended limit`\n            } `;\n          } else {\n            newDetails = `${currProduct.quantity} in inventory${\n              currProduct.lowerLimit === null\n                ? ''\n                : `, ${currProduct.lowerLimit} Critical limit`\n            } `;\n          }\n        } else {\n          newDetails = 'No Details';\n        }\n      }\n      newProductDetails[index] = newDetails;\n    });\n    setProductDetails(newProductDetails);\n  }, [productsList, type, values]);\n\n  // function to handle submit\n  const handleSubmit = event => {\n    event.preventDefault();\n    setError(validateInputs(values));\n    setIsSubmitting(true);\n  };\n\n  // function to handle any change in inputs\n  const handleChange = (event, index) => {\n    // Use event.persist() to stop event pooling done by react\n    event.persist();\n    setValues(prevState => {\n      const temp = [...prevState];\n      temp[index] = {\n        ...temp[index],\n        [event.target.name]: event.target.value,\n      };\n      return temp;\n    });\n  };\n\n  const handleProductChange = (event, newValue, index) => {\n    if (type === 'Buy') {\n      if (newValue && newValue.inputValue) {\n        setValues(prevState => {\n          const temp = [...prevState];\n          temp[index] = {\n            ...temp[index],\n            productName: newValue.inputValue,\n          };\n          return temp;\n        });\n        return;\n      }\n\n      setValues(prevState => {\n        const temp = [...prevState];\n        let val = '';\n\n        if (!newValue) {\n          val = '';\n        } else if (newValue.name) {\n          val = newValue.name;\n        } else {\n          val = newValue;\n        }\n        temp[index] = {\n          ...temp[index],\n          productName: val,\n        };\n        return temp;\n      });\n    } else {\n      let val = '';\n      if (newValue === null) {\n        val = '';\n      } else if (typeof newValue === 'string') {\n        val = newValue;\n      } else if (typeof newValue === 'object') {\n        val = newValue.name;\n      }\n      setValues(prevState => {\n        const temp = [...prevState];\n        temp[index] = {\n          ...temp[index],\n          productName: val,\n        };\n        return temp;\n      });\n\n      // on sell form if product name is updated then update the price\n      // according to the products list from API\n      const matchedProduct =\n        productsList.find(product => product.name === val) || {};\n\n      setValues(prevState => {\n        const temp = [...prevState];\n        temp[index] = {\n          ...temp[index],\n          price: matchedProduct.price || '',\n        };\n        return temp;\n      });\n    }\n  };\n\n  // function to handle clicking of add products button\n  // it adds new blank values to the state, so that new inputs can be added\n  const handleAddProduct = () => {\n    setValues(prevState => [\n      ...prevState,\n      { productName: '', quantity: '', price: '', expiryDate: '' },\n    ]);\n    setError(prevState => [\n      ...prevState,\n      { product: ' ', quantity: ' ', price: ' ', expiryDate: ' ' },\n    ]);\n    setProductDetails(prevState => [\n      ...prevState,\n      'Select a product to view details',\n    ]);\n  };\n\n  return {\n    values,\n    error,\n    handleChange,\n    handleSubmit,\n    productsList,\n    handleAddProduct,\n    handleProductChange,\n    productDetails,\n    isLoading,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Divider,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PropTypes } from 'prop-types';\nimport Autocomplete, {\n  createFilterOptions,\n} from '@material-ui/lab/Autocomplete';\nimport useForm from './useTransactionForm';\nimport Spinner from '../Spinner';\n\nconst filter = createFilterOptions();\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    textAlign: 'center',\n    padding: theme.spacing(4),\n    borderRadius: '10px',\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\n    [theme.breakpoints.only('sm')]: {\n      padding: theme.spacing(2),\n    },\n  },\n  gridContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'minmax(120px,1fr) minmax(300px,2fr)',\n    '& > .MuiDivider-root': {\n      width: '60%',\n      gridColumn: 'span 2',\n      justifySelf: 'center',\n      [theme.breakpoints.only('xs')]: {\n        margin: '0 auto',\n      },\n    },\n    [theme.breakpoints.only('xs')]: {\n      display: 'block',\n    },\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(3),\n    '& .MuiTextField-root': {\n      width: '100%',\n      maxWidth: '20rem',\n    },\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    '& > :first-child': {\n      marginTop: 0,\n    },\n  },\n  addProduct: {\n    width: theme.typography.pxToRem(165),\n    justifySelf: 'center',\n    marginBottom: theme.spacing(3),\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paperHeading: {\n    fontWeight: 'bold',\n    marginBottom: theme.spacing(2),\n  },\n  formHeading: {\n    marginTop: theme.spacing(3),\n    textAlign: 'right',\n    [theme.breakpoints.only('sm')]: {\n      textAlign: 'center',\n    },\n    [theme.breakpoints.only('xs')]: {\n      textAlign: 'left',\n    },\n  },\n  productDetails: {\n    marginBottom: '2rem',\n    maxWidth: '20rem',\n  },\n  button: {\n    gridColumn: 'span 2',\n    justifySelf: 'center',\n    width: '100%',\n    maxWidth: '12rem',\n    height: '3rem',\n    borderRadius: '2rem',\n    fontSize: '1.5rem',\n    fontWeight: '700',\n    marginTop: theme.spacing(1.5),\n    textTransform: 'capitalize',\n    boxShadow: '0 5px 65px rgba(0,0,0,0.1)',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '12rem',\n      display: 'flex',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n}));\n\nconst Form = ({ type }) => {\n  const classes = useStyles({ buy: type });\n\n  // Use custom hook for form state management\n  const {\n    values,\n    error,\n    handleChange,\n    handleSubmit,\n    productsList,\n    handleAddProduct,\n    handleProductChange,\n    productDetails,\n    isLoading,\n  } = useForm(type);\n\n  return (\n    <>\n      {isLoading ? <Spinner /> : null}\n      <div>\n        <Paper className={classes.paper}>\n          <Typography variant='h4' className={classes.paperHeading}>\n            {type} Items\n          </Typography>\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            autoComplete='off'\n            className={classes.gridContainer}\n          >\n            {/* Map over all the values in state to render an input for each one of them */}\n            {values.map((value, index) => (\n              <>\n                <Divider />\n                <Typography variant='h5' className={classes.formHeading}>\n                  Product {values.length > 1 ? index + 1 : ''}\n                </Typography>\n                <div className={classes.form}>\n                  {type === 'Buy' ? (\n                    <Autocomplete\n                      value={value.productName}\n                      onChange={(event, newValue) => {\n                        handleProductChange(event, newValue, index);\n                      }}\n                      filterOptions={(options, params) => {\n                        const filtered = filter(options, params);\n\n                        if (params.inputValue !== '') {\n                          filtered.push({\n                            inputValue: params.inputValue,\n                            name: `Add \"${params.inputValue}\"`,\n                          });\n                        }\n\n                        return filtered;\n                      }}\n                      id='productfield-input'\n                      options={productsList}\n                      getOptionLabel={option => {\n                        // e.g value selected with enter, right from the input\n                        if (typeof option === 'string') {\n                          return option;\n                        }\n                        if (option.inputValue) {\n                          return option.inputValue;\n                        }\n                        return option.name;\n                      }}\n                      renderOption={option => option.name}\n                      freeSolo\n                      style={{ width: '100%', maxWidth: '20rem' }}\n                      renderInput={params => (\n                        <TextField\n                          // eslint-disable-next-line react/jsx-props-no-spreading\n                          {...params}\n                          required\n                          label='Product Name'\n                          variant='filled'\n                          error={!(error[index].product === ' ')}\n                          helperText={error[index].product}\n                        />\n                      )}\n                    />\n                  ) : (\n                    <Autocomplete\n                      value={value.productName}\n                      onChange={(event, newValue) => {\n                        handleProductChange(event, newValue, index);\n                      }}\n                      style={{ width: '100%', maxWidth: '20rem' }}\n                      id='productfield-input'\n                      options={productsList.concat({ name: '' })}\n                      getOptionLabel={option => {\n                        // e.g value selected with enter, right from the input\n                        if (typeof option === 'string') {\n                          return option;\n                        }\n                        if (option.inputValue) {\n                          return option.inputValue;\n                        }\n                        return option.name;\n                      }}\n                      getOptionSelected={(option, val) => {\n                        return option.name === val;\n                      }}\n                      renderInput={params => (\n                        <TextField\n                          // eslint-disable-next-line react/jsx-props-no-spreading\n                          {...params}\n                          required\n                          label='Product Name'\n                          variant='filled'\n                          error={!(error[index].product === ' ')}\n                          helperText={error[index].product}\n                        />\n                      )}\n                    />\n                  )}\n                  <Typography variant='h5' className={classes.productDetails}>\n                    {productDetails[index]}\n                  </Typography>\n                  <TextField\n                    required\n                    variant='filled'\n                    id='price-input'\n                    name='price'\n                    type='number'\n                    label='Price'\n                    InputProps={{\n                      inputProps: {\n                        min: 0,\n                      },\n                    }}\n                    value={value.price}\n                    onChange={event => handleChange(event, index)}\n                    error={!(error[index].price === ' ')}\n                    helperText={error[index].price}\n                  />\n                  <TextField\n                    required\n                    variant='filled'\n                    id='quantity-input'\n                    name='quantity'\n                    type='number'\n                    label='Quantity'\n                    InputProps={{\n                      inputProps: {\n                        min: 0,\n                      },\n                    }}\n                    value={value.quantity}\n                    onChange={event => handleChange(event, index)}\n                    error={!(error[index].quantity === ' ')}\n                    helperText={error[index].quantity}\n                  />\n                  {type === 'Buy' ? (\n                    <TextField\n                      variant='filled'\n                      id='expiry-date-input'\n                      name='expiryDate'\n                      type='date'\n                      label='Expiry Date'\n                      InputProps={{\n                        inputProps: {\n                          min: new Date(Date.now()).toISOString().slice(0, 10),\n                        },\n                      }}\n                      InputLabelProps={{ shrink: true }}\n                      value={value.expiryDate}\n                      onChange={event => handleChange(event, index)}\n                      error={!(error[index].expiryDate === ' ')}\n                      helperText={error[index].expiryDate}\n                    />\n                  ) : null}\n                </div>\n              </>\n            ))}\n            <Typography />\n            <Button\n              variant='outlined'\n              color='primary'\n              type='button'\n              onClick={handleAddProduct}\n              startIcon={<AddIcon />}\n              className={classes.addProduct}\n            >\n              Add Products\n            </Button>\n            <Button\n              type='submit'\n              color='primary'\n              variant='contained'\n              className={classes.button}\n              onClick={handleSubmit}\n            >\n              {type}\n            </Button>\n          </form>\n        </Paper>\n      </div>\n    </>\n  );\n};\n\nForm.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport default Form;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Paper,\n  TableBody,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport Spinner from '../Spinner';\nimport { getEndPoint } from '../UtilityFunctions/Request';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\n    textAlign: 'center',\n    borderRadius: '10px',\n  },\n  table: {\n    backgroundColor: 'white',\n    borderRadius: '10px',\n    '& th': {\n      backgroundColor: '#e7eff3',\n      fontSize: '1.25rem',\n      fontWeight: 'bold',\n      color: theme.text.color.dark,\n      [theme.breakpoints.only('xs')]: {\n        fontSize: theme.typography.pxToRem(14),\n      },\n    },\n    '& td': {\n      fontSize: '1.5rem',\n      color: theme.text.color.darkGray,\n      [theme.breakpoints.only('xs')]: {\n        fontSize: '1rem',\n      },\n    },\n  },\n  heading: {\n    fontWeight: '700',\n    marginBottom: theme.spacing(5),\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n  firstColumn: {\n    width: '7rem',\n    paddingRight: 0,\n    [theme.breakpoints.only('xs')]: {\n      width: 'initial',\n      paddingLeft: theme.spacing(1),\n    },\n  },\n}));\n\nconst TransactionHistory = () => {\n  // list of all transactions got from API\n  const [transactionList, setTransactionList] = useState([]);\n  // true when waiting for an response from API\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n  // fetch transaction list from API\n  const apiFetch = async () => {\n    try {\n      setIsLoading(true);\n      const response = await getEndPoint('/api/bill/', null, history);\n      const { data } = response;\n      setTransactionList(data);\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    apiFetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const classes = useStyles();\n\n  // parse date to proper format\n  const parseDate = date => {\n    const newDate = new Date(date).toDateString().slice(4);\n    return newDate;\n  };\n\n  // parse price to proper format\n  const parsePrice = transactions => {\n    return transactions.reduce((acc, obj) => acc + obj.rate * obj.quantity, 0);\n  };\n\n  return (\n    <>\n      {isLoading ? <Spinner /> : null}\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table className={classes.table} aria-label='simple table'>\n            <TableHead>\n              <TableRow>\n                <TableCell> ID </TableCell>\n                <TableCell> Date </TableCell>\n                <TableCell>Products</TableCell>\n                <TableCell>Items</TableCell>\n                <TableCell align='right'>Price (Rs)</TableCell>\n                <TableCell align='center'>Type</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {transactionList.map(row => (\n                <TableRow key={row.id} hover>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell>{parseDate(row.date_time)}</TableCell>\n                  <TableCell>\n                    {row.transaction.map((val, index) =>\n                      index === row.transaction.length - 1\n                        ? val.name\n                        : `${val.name}, `\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {row.transaction.map((val, index) =>\n                      index === row.transaction.length - 1\n                        ? val.quantity\n                        : `${val.quantity}, `\n                    )}\n                  </TableCell>\n                  <TableCell align='right'>\n                    {parsePrice(row.transaction)}\n                  </TableCell>\n                  <TableCell align='center'>\n                    {row.in_or_out === 'In' ? 'Buy' : 'Sell'}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </>\n  );\n};\n\nexport default TransactionHistory;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Tab, withStyles, Tabs, Box } from '@material-ui/core/';\nimport { PropTypes } from 'prop-types';\nimport Form from './TransactionForm';\nimport TransactionHistory from './TransactionHistory';\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    '& > div': {\n      height: '1rem',\n      borderRadius: '2px',\n      maxWidth: '3rem',\n      width: '100%',\n      backgroundColor: '#495d69',\n    },\n  },\n})(props => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\nconst StyledTab = withStyles(theme => ({\n  root: {\n    textTransform: 'none',\n    color: '#000',\n    fontWeight: 'bold',\n    fontSize: theme.typography.pxToRem(24),\n    marginRight: theme.spacing(1),\n    '&:focus': {\n      opacity: 1,\n    },\n  },\n}))(props => <Tab disableRipple {...props} />);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component='div'\n      role='tabpanel'\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box py={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node.isRequired,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(() => ({\n  heading: {\n    fontWeight: 'bold',\n  },\n}));\n\nexport default function Transaction() {\n  // index of current tab\n  const [tab, setTab] = useState(0);\n\n  const classes = useStyles();\n\n  // set the tab to new index\n  const handleTabChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n  return (\n    <>\n      <Typography variant='h3' className={classes.heading} gutterBottom>\n        Transactions\n      </Typography>\n      <StyledTabs value={tab} onChange={handleTabChange}>\n        <StyledTab label='Buy' />\n        <StyledTab label='Sell' />\n        <StyledTab label='History' />\n      </StyledTabs>\n      <TabPanel value={tab} index={0}>\n        <Form type='Buy' />\n      </TabPanel>\n      <TabPanel value={tab} index={1}>\n        <Form type='Sell' />\n      </TabPanel>\n      <TabPanel value={tab} index={2}>\n        <TransactionHistory />\n      </TabPanel>\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  TableBody,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Hidden,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MobileEditMenu from '../MobileEditMenu';\r\nimport { SnackContext } from '../SnackBar/SnackContext';\r\nimport Spinner from '../Spinner';\r\nimport DialogBox from '../DialogBox/DialogBox';\r\nimport { getEndPoint } from '../UtilityFunctions/Request';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\r\n    textAlign: 'center',\r\n    borderRadius: '10px',\r\n  },\r\n  table: {\r\n    backgroundColor: 'white',\r\n    borderRadius: '10px',\r\n    '& th': {\r\n      backgroundColor: '#e7eff3',\r\n      fontSize: '1.25rem',\r\n      fontWeight: 'bold',\r\n      color: theme.text.color.dark,\r\n      [theme.breakpoints.only('xs')]: {\r\n        fontSize: theme.typography.pxToRem(14),\r\n      },\r\n    },\r\n    '& td': {\r\n      fontSize: '1.5rem',\r\n      color: theme.text.color.darkGray,\r\n      [theme.breakpoints.only('xs')]: {\r\n        fontSize: '1rem',\r\n      },\r\n    },\r\n    '& .MuiTableCell-root': {\r\n      [theme.breakpoints.only('xs')]: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    '& tr.delete': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  firstColumn: {\r\n    width: '7rem',\r\n    paddingRight: 0,\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: 'initial',\r\n      paddingLeft: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function InventoryTable() {\r\n  // list of inventory got from API\r\n  const [inventoryList, setInventoryList] = useState([]);\r\n  // contains the index of the row, if delete is used\r\n  const [deletedRow, setDeletedRow] = useState([]);\r\n  // true when waiting for an response from API\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // dialog box\r\n  const [open, setOpen] = useState(false);\r\n  // row to be selected on clicking the delete icon\r\n  const [selectedRow, setSelectedRow] = useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const history = useHistory();\r\n\r\n  const { setSnack } = useContext(SnackContext);\r\n\r\n  const apiFetch = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const response = await getEndPoint('/api/productlist/', null, history);\r\n      // Use utility function\r\n\r\n      // console.log(\"error\",response) check error code here for reference\r\n\r\n      const { data } = response;\r\n      const list = data.map(val => ({\r\n        name: val.name,\r\n        quantity: val.quantity,\r\n        sellingPrice: val.latest_selling_price,\r\n        loose: val.loose,\r\n        id: val.id,\r\n        upperLimit: val.upper_limit === null ? '' : val.upper_limit,\r\n        lowerLimit: val.lower_limit === null ? '' : val.lower_limit,\r\n      }));\r\n      setInventoryList(list);\r\n      setIsLoading(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // call API on component load\r\n  useEffect(() => {\r\n    apiFetch();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  // handle product delete\r\n  const handleDelete = async row => {\r\n    setIsLoading(true);\r\n    const { id } = row;\r\n    setDeletedRow(prevState => [...prevState, inventoryList.indexOf(row)]);\r\n    try {\r\n      await axios.delete(`/api/productlist/${id}/`);\r\n\r\n      // add success snackbar on successful request\r\n      const { name } = inventoryList.find(val => val.id === id);\r\n      setIsLoading(false);\r\n      setSnack({\r\n        open: true,\r\n        message: `Succesfully deleted ${name}`,\r\n        action: '',\r\n        actionParams: '',\r\n        type: 'success',\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // handle product edit\r\n  const handleEdit = row => {\r\n    history.push('/updateproduct', {\r\n      name: row.name,\r\n      sellingPrice: row.sellingPrice,\r\n      loose: row.loose,\r\n      id: row.id,\r\n      upperLimit: row.upperLimit,\r\n      lowerLimit: row.lowerLimit,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <Spinner /> : null}\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table className={classes.table} aria-label='simple table'>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell>Product</TableCell>\r\n                <TableCell align='right'>Items</TableCell>\r\n                <TableCell align='right'>Price (Rs)</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {inventoryList.map((row, index) => (\r\n                <TableRow\r\n                  key={row.name}\r\n                  hover\r\n                  className={deletedRow.includes(index) ? 'delete' : ''}\r\n                >\r\n                  <TableCell className={classes.firstColumn}>\r\n                    <Hidden xsDown>\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          handleEdit(row);\r\n                        }}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setSelectedRow(row);\r\n                          handleClickOpen();\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Hidden>\r\n                    <Hidden smUp>\r\n                      <MobileEditMenu\r\n                        handleDelete={() => {\r\n                          setSelectedRow(row);\r\n                          handleClickOpen();\r\n                        }}\r\n                        handleEdit={handleEdit}\r\n                        row={row}\r\n                      />\r\n                    </Hidden>\r\n                  </TableCell>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell align='right'>{row.quantity}</TableCell>\r\n                  <TableCell align='right'>\r\n                    {row.sellingPrice || 'Not Set'}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n      <DialogBox\r\n        open={open}\r\n        handleClose={handleClose}\r\n        selectedRow={selectedRow}\r\n        handleDelete={handleDelete}\r\n        number='1'\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  TableBody,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Spinner from '../Spinner';\r\nimport { getEndPoint } from '../UtilityFunctions/Request';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\r\n    textAlign: 'center',\r\n    borderRadius: '10px',\r\n  },\r\n  tableContainer: {\r\n    border: '2px solid #f2c94c',\r\n  },\r\n  table: {\r\n    backgroundColor: 'white',\r\n    borderRadius: '10px',\r\n    '& th': {\r\n      backgroundColor: '#e7eff3',\r\n      fontSize: '1.25rem',\r\n      fontWeight: 'bold',\r\n      color: theme.text.color.dark,\r\n      [theme.breakpoints.only('xs')]: {\r\n        fontSize: theme.typography.pxToRem(14),\r\n      },\r\n    },\r\n    '& td': {\r\n      fontSize: '1.5rem',\r\n      color: theme.text.color.darkGray,\r\n      [theme.breakpoints.only('xs')]: {\r\n        fontSize: '1rem',\r\n      },\r\n    },\r\n    '& .MuiTableCell-root': {\r\n      [theme.breakpoints.only('xs')]: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ExpiryTable() {\r\n  // list of near expiry products got from API\r\n  const [expiryList, setExpiryList] = useState([]);\r\n  // true when waiting for an response from API\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const apiFetch = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await getEndPoint('/api/explist/', null, history);\r\n      const { data } = response;\r\n      console.log(data);\r\n      const list = data.map(val => ({\r\n        name: val.Product,\r\n        quantity: val['No. of items'],\r\n        daysLeft: val['Days left'],\r\n      }));\r\n      setExpiryList(list);\r\n      setIsLoading(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // call API on component load\r\n  useEffect(() => {\r\n    apiFetch();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <Spinner /> : null}\r\n      <Paper className={classes.paper}>\r\n        <TableContainer className={classes.tableContainer}>\r\n          <Table className={classes.table} aria-label='simple table'>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product</TableCell>\r\n                <TableCell align='right'>Items</TableCell>\r\n                <TableCell align='right'>Days Left</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {expiryList.map(row => (\r\n                <TableRow key={row.name} hover>\r\n                  <TableCell>{row.name}</TableCell>\r\n                  <TableCell align='right'>{row.quantity}</TableCell>\r\n                  <TableCell align='right'>{row.daysLeft}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Tab, withStyles, Tabs, Box } from '@material-ui/core/';\r\nimport { PropTypes } from 'prop-types';\r\nimport InventoryTable from './InventoryTable';\r\nimport ExpiryTable from './ExpiryTable';\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    '& > div': {\r\n      height: '1rem',\r\n      borderRadius: '2px',\r\n      maxWidth: '3rem',\r\n      width: '100%',\r\n      backgroundColor: '#495d69',\r\n    },\r\n  },\r\n})(props => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\r\n\r\nconst StyledTab = withStyles(theme => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    color: '#000',\r\n    fontWeight: 'bold',\r\n    fontSize: theme.typography.pxToRem(24),\r\n    marginRight: theme.spacing(1),\r\n    '&:focus': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component='div'\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box py={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  heading: {\r\n    fontWeight: '700',\r\n  },\r\n}));\r\n\r\nexport default function Inventory() {\r\n  // index of current tab\r\n  const [tab, setTab] = useState(0);\r\n\r\n  const classes = useStyles();\r\n\r\n  // set the tab to new index\r\n  const handleTabChange = (event, newValue) => {\r\n    setTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant='h3' className={classes.heading} gutterBottom>\r\n        Inventory\r\n      </Typography>\r\n      <StyledTabs value={tab} onChange={handleTabChange}>\r\n        <StyledTab label='All' />\r\n        <StyledTab label='Near expiry' />\r\n      </StyledTabs>\r\n      <TabPanel value={tab} index={0}>\r\n        <InventoryTable />\r\n      </TabPanel>\r\n      <TabPanel value={tab} index={1}>\r\n        <Typography variant='h6' gutterBottom>\r\n          Items which expire in the next 3 days are displayed here\r\n        </Typography>\r\n        <ExpiryTable />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SnackContext } from '../SnackBar/SnackContext';\r\nimport { postEndPoint } from '../UtilityFunctions/Request';\r\n\r\n// custom hook for form state management\r\nconst useForm = () => {\r\n  // function to validate inputs, returns the error statements\r\n  const validateInputs = values => {\r\n    const err = {\r\n      errors: false,\r\n      firstName: ' ',\r\n      lastName: ' ',\r\n      email: ' ',\r\n      password: ' ',\r\n      confirmPassword: ' ',\r\n      age: ' ',\r\n      gender: ' ',\r\n    };\r\n\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n      err.email = 'Please enter a valid email';\r\n      err.errors = true;\r\n    }\r\n    if (values.password.length < 5) {\r\n      err.password = 'Password should have more than 5 characters';\r\n      err.errors = true;\r\n    }\r\n    if (values.confirmPassword !== values.password) {\r\n      err.confirmPassword = 'Passwords do not match';\r\n      err.errors = true;\r\n    }\r\n\r\n    if (values.age === '0') {\r\n      err.age = 'Age cannot be 0';\r\n      err.errors = true;\r\n    }\r\n\r\n    Object.keys(values).forEach(key => {\r\n      if (values[key] === '') {\r\n        err[key] = 'Please fill out this field';\r\n        err.errors = true;\r\n      }\r\n    });\r\n\r\n    return err;\r\n  };\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    age: '',\r\n    gender: 'M',\r\n    isStaff: 'true',\r\n  });\r\n  // toggle to show password on password input\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setConfirmPassword] = useState(false);\r\n\r\n  // error messages to be added to the inputs\r\n  const [error, setError] = useState({\r\n    errors: false,\r\n    firstName: ' ',\r\n    lastName: ' ',\r\n    email: ' ',\r\n    password: ' ',\r\n    confirmPassword: ' ',\r\n    age: ' ',\r\n    gender: ' ',\r\n  });\r\n\r\n  // contains the error value. value depends on the response from server\r\n  const [invalidCred, setInvalidCred] = useState('');\r\n  // true only if submit button is pressed\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  // true when waiting for an response from API\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const { setSnack } = useContext(SnackContext);\r\n\r\n  // function to post the credentials to the server, then user is redirected to employee page.\r\n  //  if credentials are invalid then invalidcred is set to appropriate errors got from API\r\n  const apiFetch = async formData => {\r\n    try {\r\n      setIsLoading(true);\r\n      await postEndPoint('/auth/users/', formData, null, history);\r\n      setIsLoading(false);\r\n\r\n      // add success snackbar on successful request\r\n      setSnack({\r\n        open: true,\r\n        message: `Succesfully added ${values.firstName} ${values.lastName}`,\r\n        action: '',\r\n        actionParams: '',\r\n        type: 'success',\r\n      });\r\n      history.push('/employee');\r\n    } catch (e) {\r\n      console.log(e.response);\r\n      if (e.response.status === 400) {\r\n        const responseError = Object.values(e.response.data)[0][0];\r\n        setInvalidCred(responseError);\r\n        setIsLoading(false);\r\n\r\n        // add error snackbar on unsuccessful request\r\n        setSnack({\r\n          open: true,\r\n          message: responseError,\r\n          action: '',\r\n          actionParams: '',\r\n          type: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // only runs if there are no errors and submit button is pressed\r\n    // isSubmitting is used to avoid running on initial render\r\n    if (!error.errors && isSubmitting) {\r\n      const formData = new FormData();\r\n      formData.append('email', values.email);\r\n      formData.append('password', values.password);\r\n      formData.append('first_name', values.firstName);\r\n      formData.append('last_name', values.lastName);\r\n      formData.append('age', values.age);\r\n      formData.append('gender', values.gender);\r\n      formData.append('is_staff', values.isStaff);\r\n      // post data to server\r\n      apiFetch(formData);\r\n      setIsSubmitting(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [error, isSubmitting]);\r\n\r\n  // function to toggle show password\r\n  const toggleShowPassword = () => {\r\n    setShowPassword(prevState => !prevState);\r\n  };\r\n\r\n  const toggleShowconfirmPassword = () => {\r\n    setConfirmPassword(prevState => !prevState);\r\n  };\r\n\r\n  // function to handle submit\r\n  const handleSubmit = event => {\r\n    if (event) event.preventDefault();\r\n    setError(validateInputs(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  // function to handle any change in inputs\r\n  const handleChange = event => {\r\n    // Use event.persist() to stop event pooling done by react\r\n    event.persist();\r\n    setValues(prevState => ({\r\n      ...prevState,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    error,\r\n    invalidCred,\r\n    setInvalidCred,\r\n    values,\r\n    showPassword,\r\n    showConfirmPassword,\r\n    setError,\r\n    toggleShowPassword,\r\n    toggleShowconfirmPassword,\r\n    isLoading,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import React from 'react';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  makeStyles,\r\n  Button,\r\n  InputAdornment,\r\n  IconButton,\r\n  Divider,\r\n  MenuItem,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport useForm from './useRegisterForm';\r\nimport Spinner from '../Spinner';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(4),\r\n    borderRadius: '10px',\r\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\r\n    [theme.breakpoints.only('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n  },\r\n  gridContainer: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'minmax(120px,1fr) minmax(300px,2fr)',\r\n    '& > .MuiDivider-root': {\r\n      width: '60%',\r\n      gridColumn: 'span 2',\r\n      justifySelf: 'center',\r\n      [theme.breakpoints.only('xs')]: {\r\n        margin: '0 auto',\r\n      },\r\n    },\r\n    [theme.breakpoints.only('xs')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  formHeading: {\r\n    marginTop: theme.spacing(3),\r\n    textAlign: 'right',\r\n    [theme.breakpoints.only('sm')]: {\r\n      textAlign: 'center',\r\n    },\r\n    [theme.breakpoints.only('xs')]: {\r\n      textAlign: 'left',\r\n    },\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(3),\r\n    '& .MuiTextField-root': {\r\n      width: '100%',\r\n      maxWidth: '20rem',\r\n    },\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    '& > :first-child': {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  heading: {\r\n    fontWeight: '700',\r\n    marginBottom: theme.spacing(2.5),\r\n  },\r\n  button: {\r\n    gridColumn: 'span 2',\r\n    justifySelf: 'center',\r\n    width: '100%',\r\n    maxWidth: '18rem',\r\n    height: '3rem',\r\n    borderRadius: '2rem',\r\n    fontSize: '1.5rem',\r\n    fontWeight: '700',\r\n    marginTop: theme.spacing(1.5),\r\n    textTransform: 'capitalize',\r\n    boxShadow: '0 5px 65px rgba(0,0,0,0.1)',\r\n    [theme.breakpoints.down('xs')]: {\r\n      maxWidth: '12rem',\r\n    },\r\n  },\r\n  radio: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  invalid: {\r\n    display: props => (props.invalid === '' ? 'none' : 'block'),\r\n  },\r\n}));\r\n\r\nconst Register = () => {\r\n  // Use custom hook for form state management\r\n  const {\r\n    handleChange,\r\n    handleSubmit,\r\n    error,\r\n    invalidCred,\r\n    values,\r\n    showConfirmPassword,\r\n    showPassword,\r\n    toggleShowPassword,\r\n    toggleShowconfirmPassword,\r\n    isLoading,\r\n  } = useForm();\r\n\r\n  const classes = useStyles({ invalid: invalidCred });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? <Spinner /> : null}\r\n      <Paper className={classes.paper}>\r\n        <Typography variant='h4' className={classes.heading}>\r\n          Add New Employee\r\n        </Typography>\r\n        <Typography\r\n          variant='h6'\r\n          color='error'\r\n          className={classes.invalid}\r\n          gutterBottom\r\n        >\r\n          {invalidCred}\r\n        </Typography>\r\n        <form\r\n          noValidate\r\n          onSubmit={handleSubmit}\r\n          autoComplete='off'\r\n          className={classes.gridContainer}\r\n        >\r\n          <Divider />\r\n          <Typography variant='h5' className={classes.formHeading}>\r\n            Account\r\n          </Typography>\r\n          <div className={classes.form}>\r\n            <TextField\r\n              required\r\n              variant='filled'\r\n              id='last-name-input'\r\n              name='firstName'\r\n              label='First Name'\r\n              value={values.firstName}\r\n              onChange={handleChange}\r\n              error={!(error.firstName === ' ')}\r\n              helperText={error.firstName}\r\n            />\r\n            <TextField\r\n              required\r\n              variant='filled'\r\n              id='first-name-input'\r\n              name='lastName'\r\n              label='Last Name'\r\n              value={values.lastName}\r\n              onChange={handleChange}\r\n              error={!(error.lastName === ' ')}\r\n              helperText={error.lastName}\r\n            />\r\n            <TextField\r\n              required\r\n              variant='filled'\r\n              id='email-input'\r\n              name='email'\r\n              type='email'\r\n              label='Email'\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              error={!(error.email === ' ')}\r\n              helperText={error.email}\r\n            />\r\n            <TextField\r\n              required\r\n              variant='filled'\r\n              id='password-input'\r\n              name='password'\r\n              type={showPassword ? 'text' : 'password'}\r\n              label='Password'\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              error={!(error.password === ' ')}\r\n              helperText={error.password}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton onClick={toggleShowPassword} tabIndex='-1'>\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              variant='filled'\r\n              id='confirm-password-input'\r\n              name='confirmPassword'\r\n              type={showConfirmPassword ? 'text' : 'password'}\r\n              label='Confirm Password'\r\n              value={values.confirmPassword}\r\n              onChange={handleChange}\r\n              error={!(error.confirmPassword === ' ')}\r\n              helperText={error.confirmPassword}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton\r\n                      onClick={toggleShowconfirmPassword}\r\n                      tabIndex='-1'\r\n                    >\r\n                      {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              required\r\n              variant='filled'\r\n              id='gender-input'\r\n              name='gender'\r\n              select\r\n              label='Employee Gender'\r\n              value={values.gender}\r\n              onChange={handleChange}\r\n              error={!(error.gender === ' ')}\r\n              helperText={error.gender}\r\n            >\r\n              {['Male', 'Female', 'Other'].map((option, index) => (\r\n                <MenuItem key={option} value={['M', 'F', 'Other'][index]}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              required\r\n              variant='filled'\r\n              id='age-input'\r\n              name='age'\r\n              type='number'\r\n              label='Employee Age'\r\n              InputProps={{\r\n                inputProps: {\r\n                  min: 0,\r\n                },\r\n              }}\r\n              value={values.age}\r\n              onChange={handleChange}\r\n              error={!(error.age === ' ')}\r\n              helperText={error.age}\r\n            />\r\n            <FormControl component='fieldset'>\r\n              <FormLabel component='legend'>Type</FormLabel>\r\n              <RadioGroup\r\n                name='isStaff'\r\n                value={values.isStaff}\r\n                onChange={handleChange}\r\n                className={classes.radio}\r\n              >\r\n                <FormControlLabel\r\n                  value='true'\r\n                  control={<Radio />}\r\n                  label='Manager'\r\n                />\r\n                <FormControlLabel\r\n                  value='false'\r\n                  control={<Radio />}\r\n                  label='Employee'\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n          <Button\r\n            type='submit'\r\n            color='primary'\r\n            variant='contained'\r\n            className={classes.button}\r\n            onClick={handleSubmit}\r\n          >\r\n            Register\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SnackContext } from '../SnackBar/SnackContext';\nimport { postEndPoint } from '../UtilityFunctions/Request';\n\n// custom hook for form state management\nconst useForm = ({ name, sellingPrice, loose, id, upperLimit, lowerLimit }) => {\n  // function to validate inputs, returns the error statements\n  const validateInputs = values => {\n    const err = {\n      errors: false,\n      name: ' ',\n      sellingPrice: ' ',\n      loose: ' ',\n      upperLimit: ' ',\n      lowerLimit: ' ',\n    };\n\n    if (values.sellingPrice === '0') {\n      err.sellingPrice = 'Selling Price cannot be 0';\n      err.errors = true;\n    }\n\n    if (values.upperLimit === '0') {\n      err.upperLimit = 'Upper Limit cannot be 0';\n      err.errors = true;\n    }\n\n    if (values.lowerLimit === '0') {\n      err.lowerLimit = 'Lower Limit cannot be 0';\n      err.errors = true;\n    }\n\n    if (Number(values.upperLimit) <= Number(values.lowerLimit)) {\n      err.upperLimit = 'Upper Limit cannot be lower or equal to Lower limit';\n      err.errors = true;\n    }\n\n    if (Number(values.lowerLimit) >= Number(values.upperLimit)) {\n      err.lowerLimit = 'Lower Limit cannot be lower or equal to Upper limit';\n      err.errors = true;\n    }\n\n    Object.keys(values).forEach(key => {\n      if (key !== 'upperLimit' || key !== 'lowerLimit') {\n        if (values[key] === '') {\n          err[key] = 'Please fill out this field';\n          err.errors = true;\n        }\n      }\n    });\n\n    return err;\n  };\n\n  // values for name , selling price and loose\n  // got from location state\n  const [values, setValues] = useState({\n    name,\n    sellingPrice: sellingPrice || '',\n    loose: loose === true ? 'true' : 'false',\n    upperLimit,\n    lowerLimit,\n  });\n\n  // error messages to be added to the inputs\n  const [error, setError] = useState({\n    errors: false,\n    name: ' ',\n    sellingPrice: ' ',\n    loose: ' ',\n    upperLimit: ' ',\n    lowerLimit: ' ',\n  });\n\n  // true only if submit button is pressed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  // true when waiting for an response from API\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n\n  const { setSnack } = useContext(SnackContext);\n\n  // function to post the credentials to the server, then user is redirected to employee page.\n  //  if credentials are invalid then invalidcred is set to appropriate errors got from API\n  const apiFetch = async formData => {\n    try {\n      setIsLoading(true);\n      await postEndPoint(`/api/update/${id}/`, formData, null, history);\n      setIsLoading(false);\n\n      // add success snackbar on successful request\n      setSnack({\n        open: true,\n        message: `Succesfully updated ${values.name}`,\n        action: '',\n        actionParams: '',\n        type: 'success',\n      });\n      history.push('/inventory');\n    } catch (e) {\n      console.log(e.response);\n    }\n  };\n\n  useEffect(() => {\n    // only runs if there are no errors and submit button is pressed\n    // isSubmitting is used to avoid running on initial render\n    if (!error.errors && isSubmitting) {\n      const formData = new FormData();\n      formData.append('name', values.name);\n      formData.append('latest_selling_price', values.sellingPrice);\n      const looseVal = values.loose === 'true' ? 'True' : 'False';\n      formData.append('loose', looseVal);\n      if (values.upperLimit !== '') {\n        formData.append('upper', values.upperLimit);\n      }\n      if (values.lowerLimit !== '') {\n        formData.append('lower', values.lowerLimit);\n      }\n      // post data to server\n      apiFetch(formData);\n      setIsSubmitting(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isSubmitting]);\n\n  // function to handle submit\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setError(validateInputs(values));\n    setIsSubmitting(true);\n  };\n\n  // function to handle any change in inputs\n  const handleChange = event => {\n    // Use event.persist() to stop event pooling done by react\n    event.persist();\n    setValues(prevState => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    error,\n    values,\n    isLoading,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  makeStyles,\n  Button,\n  Divider,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from '@material-ui/core';\nimport { useLocation } from 'react-router-dom';\nimport useForm from './useUpdateProductForm';\nimport Spinner from '../Spinner';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    textAlign: 'center',\n    padding: theme.spacing(4),\n    borderRadius: '10px',\n    boxShadow: '4px 4px 20px rgba(0,0,0,0.1)',\n    [theme.breakpoints.only('sm')]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n  },\n  gridContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'minmax(120px,1fr) minmax(300px,2fr)',\n    '& > .MuiDivider-root': {\n      width: '60%',\n      gridColumn: 'span 2',\n      justifySelf: 'center',\n      [theme.breakpoints.only('xs')]: {\n        margin: '0 auto',\n      },\n    },\n    [theme.breakpoints.only('xs')]: {\n      display: 'block',\n    },\n  },\n  formHeading: {\n    marginTop: theme.spacing(3),\n    textAlign: 'right',\n    [theme.breakpoints.only('sm')]: {\n      textAlign: 'center',\n    },\n    [theme.breakpoints.only('xs')]: {\n      textAlign: 'left',\n    },\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(3),\n    '& .MuiTextField-root': {\n      width: '100%',\n      maxWidth: '20rem',\n    },\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    '& > :first-child': {\n      marginTop: 0,\n    },\n  },\n  heading: {\n    fontWeight: '700',\n    marginBottom: theme.spacing(2.5),\n  },\n  button: {\n    gridColumn: 'span 2',\n    justifySelf: 'center',\n    width: '100%',\n    maxWidth: '18rem',\n    height: '3rem',\n    borderRadius: '2rem',\n    fontSize: '1.5rem',\n    fontWeight: '700',\n    marginTop: theme.spacing(1.5),\n    textTransform: 'capitalize',\n    boxShadow: '0 5px 65px rgba(0,0,0,0.1)',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '12rem',\n    },\n  },\n  radio: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n}));\n\nconst UpdateProduct = () => {\n  // get state from location\n  const location = useLocation();\n  const {\n    name,\n    sellingPrice,\n    id,\n    loose,\n    upperLimit,\n    lowerLimit,\n  } = location.state;\n  // Use custom hook for form state management\n  const { handleChange, handleSubmit, error, values, isLoading } = useForm({\n    name,\n    sellingPrice,\n    loose,\n    id,\n    upperLimit,\n    lowerLimit,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {isLoading ? <Spinner /> : null}\n      <Paper className={classes.paper}>\n        <Typography variant='h4' className={classes.heading}>\n          Update Product\n        </Typography>\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n          autoComplete='off'\n          className={classes.gridContainer}\n        >\n          <Divider />\n          <Typography variant='h5' className={classes.formHeading}>\n            Product\n          </Typography>\n          <div className={classes.form}>\n            <TextField\n              required\n              variant='filled'\n              id='name-input'\n              name='name'\n              label='Name'\n              value={values.name}\n              onChange={handleChange}\n              error={!(error.name === ' ')}\n              helperText={error.name}\n            />\n            <TextField\n              required\n              variant='filled'\n              id='sellingPrice-input'\n              type='number'\n              name='sellingPrice'\n              label='Selling Price'\n              InputProps={{\n                inputProps: {\n                  min: 0,\n                },\n              }}\n              value={values.sellingPrice}\n              onChange={handleChange}\n              error={!(error.sellingPrice === ' ')}\n              helperText={error.sellingPrice}\n            />\n            <TextField\n              variant='filled'\n              id='upperLimit-input'\n              type='number'\n              name='upperLimit'\n              label='Recommended Limit'\n              InputProps={{\n                inputProps: {\n                  min: 0,\n                },\n              }}\n              value={values.upperLimit}\n              onChange={handleChange}\n              error={!(error.upperLimit === ' ')}\n              helperText={error.upperLimit}\n            />\n            <TextField\n              variant='filled'\n              id='lowerLimit-input'\n              type='number'\n              name='lowerLimit'\n              label='Critical Limit'\n              InputProps={{\n                inputProps: {\n                  min: 0,\n                },\n              }}\n              value={values.lowerLimit}\n              onChange={handleChange}\n              error={!(error.lowerLimit === ' ')}\n              helperText={error.lowerLimit}\n            />\n            <FormControl component='fieldset'>\n              <FormLabel component='legend'>Type</FormLabel>\n              <RadioGroup\n                name='loose'\n                value={values.loose}\n                onChange={handleChange}\n                className={classes.radio}\n              >\n                <FormControlLabel\n                  value='true'\n                  control={<Radio />}\n                  label='Loose'\n                />\n                <FormControlLabel\n                  value='false'\n                  control={<Radio />}\n                  label='Packed'\n                />\n              </RadioGroup>\n            </FormControl>\n          </div>\n          <Button\n            type='submit'\n            color='primary'\n            variant='contained'\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Update\n          </Button>\n        </form>\n      </Paper>\n    </>\n  );\n};\n\nexport default UpdateProduct;\n","import React, { useContext } from 'react';\nimport { Snackbar, Button, IconButton } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useHistory } from 'react-router-dom';\nimport { SnackContext } from './SnackContext';\n\nconst SimpleSnackbar = () => {\n  const { snack, setSnack } = useContext(SnackContext);\n  const { open, message, action, actionParams, type } = snack;\n\n  const history = useHistory();\n\n  const handleAction = () => {\n    if (action === 'EDIT') {\n      history.push('/updateproduct', {\n        name: actionParams.name,\n        sellingPrice: actionParams.sellingPrice,\n        loose: actionParams.loose,\n        id: actionParams.id,\n      });\n    }\n    setSnack(prevState => ({ ...prevState, open: false }));\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnack(prevState => ({ ...prevState, open: false }));\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert\n          variant='filled'\n          elevation={6}\n          severity={type}\n          onClose={handleClose}\n          action={\n            // eslint-disable-next-line react/jsx-wrap-multilines\n            <>\n              {action === '' ? null : (\n                <Button color='inherit' size='small' onClick={handleAction}>\n                  {action}\n                </Button>\n              )}\n\n              <IconButton\n                size='small'\n                aria-label='close'\n                color='inherit'\n                onClick={handleClose}\n              >\n                <CloseIcon fontSize='small' />\n              </IconButton>\n            </>\n          }\n        >\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default SimpleSnackbar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport Home from '../Home/Home';\nimport Employee from '../Employee/Employee';\nimport Transaction from '../Transactions/Transaction';\nimport Inventory from '../Inventory/Inventory';\nimport Register from '../Register/Register';\nimport UpdateProduct from '../UpdateProduct/UpdateProductForm';\nimport SimpleSnackbar from '../SnackBar/Snackbar';\nimport SnackContextProvider from '../SnackBar/SnackContext';\n\nconst drawerWidth = 230;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(5),\n    paddingTop: theme.spacing(13),\n    marginLeft: drawerWidth,\n    [theme.breakpoints.only('sm')]: {\n      marginLeft: props => (props.tab ? drawerWidth : '4.5rem'),\n    },\n    [theme.breakpoints.only('xs')]: {\n      marginLeft: 0,\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n  },\n}));\n\nconst Container = ({ tabletOpen }) => {\n  const classes = useStyles({ tab: tabletOpen });\n\n  return (\n    <div className={classes.container}>\n      <SnackContextProvider>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <AdminRoute path='/employee'>\n            <Employee />\n          </AdminRoute>\n          <Route path='/transaction'>\n            <Transaction />\n          </Route>\n          <Route path='/inventory'>\n            <Inventory />\n          </Route>\n          <Route path='/updateproduct'>\n            <UpdateProduct />\n          </Route>\n          <AdminRoute path='/addemployee'>\n            <Register />\n          </AdminRoute>\n        </Switch>\n        <SimpleSnackbar />\n      </SnackContextProvider>\n    </div>\n  );\n};\n\n// Admin Route Component\nconst AdminRoute = ({ children, path, ...rest }) => {\n  const isAdmin = localStorage.getItem('isStaff');\n\n  // User cannot directly open respective page if user is not an admin.\n  // It also redirects the user to home page\n\n  return (\n    <Route\n      path={path}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n      render={\n        ({ location }) =>\n          isAdmin ? (\n            children\n          ) : (\n            <Redirect to={{ pathname: '/', state: { from: location } }} />\n          )\n        // eslint-disable-next-line react/jsx-curly-newline\n      }\n    />\n  );\n};\n\nAdminRoute.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element).isRequired,\n  ]).isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nContainer.propTypes = {\n  tabletOpen: PropTypes.bool.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport illustration from '../images/PageNotFound.svg';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 'calc(100vh - 10rem)',\n  },\n  button: {\n    maxWidth: '18rem',\n    height: '3rem',\n    borderRadius: '1rem',\n    fontWeight: '700',\n    marginTop: theme.spacing(1.5),\n    boxShadow: '0 5px 65px rgba(0,0,0,0.1)',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '12rem',\n    },\n  },\n  img: {\n    maxWidth: '30%',\n    marginBottom: theme.spacing(4),\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '50%',\n    },\n  },\n}));\n\nconst PageNotFound = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push('/');\n  };\n\n  return (\n    <div className={classes.container}>\n      <img src={illustration} alt='illustration' className={classes.img} />\n      <h1>Page not found</h1>\n      <h3>The page you are looking for does not exist</h3>\n      <Button\n        type='button'\n        color='primary'\n        variant='contained'\n        className={classes.button}\n        onClick={handleClick}\n      >\n        Home\n      </Button>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport illustration from '../images/Authentication.svg';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 'calc(100vh - 10rem)',\n  },\n  button: {\n    maxWidth: '18rem',\n    height: '3rem',\n    borderRadius: '1rem',\n    fontWeight: '700',\n    marginTop: theme.spacing(1.5),\n    boxShadow: '0 5px 65px rgba(0,0,0,0.1)',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '12rem',\n    },\n  },\n  img: {\n    maxWidth: '30%',\n    marginBottom: theme.spacing(4),\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '50%',\n    },\n  },\n}));\n\nconst UnAuthorizedAccess = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('isStaff');\n  }, []);\n\n  const handleClick = () => {\n    history.push('/');\n  };\n\n  return (\n    <div className={classes.container}>\n      <img src={illustration} alt='illustration' className={classes.img} />\n      <h1>UnAuthorized Access</h1>\n      <h3>Access Denied! Please login again</h3>\n      <Button\n        type='button'\n        color='primary'\n        variant='contained'\n        className={classes.button}\n        onClick={handleClick}\n      >\n        Login\n      </Button>\n    </div>\n  );\n};\n\nexport default UnAuthorizedAccess;\n","/* eslint-disable react/jsx-curly-newline */\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavBar from './NavBar/NavBar';\nimport Login from './Login/Login';\nimport NavDrawer from './Drawer/Drawer';\nimport Container from './Container/Container';\nimport PageNotFound from './PageNotFound';\nimport UnAuthorizedAccess from './UnAuthorizedAccess';\n\nconst Routes = () => {\n  // Using state so that navbar can communicate with drawer\n  // mobileOpen will be used for screen width less than 600px\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  // tabletOpen will be used for screen width between 960px and 600px\n  const [tabletOpen, setTabletOpen] = React.useState(false);\n  // All the routes of our app, excluding login\n  const allRoutes = [\n    '/',\n    '/inventory',\n    '/transaction',\n    '/employee',\n    '/addemployee',\n    '/updateproduct',\n  ];\n\n  return (\n    <Router>\n      <Switch>\n        {/* Route handling for login */}\n        <PrivateRoute exact path='/login'>\n          <NavBar\n            mobileOpen={mobileOpen}\n            setMobileOpen={setMobileOpen}\n            tabletOpen={tabletOpen}\n            setTabletOpen={setTabletOpen}\n          />\n          <Login />\n        </PrivateRoute>\n        {/* Route handling for all routes in allRoutes variable */}\n        <PrivateRoute exact path={allRoutes}>\n          <NavBar\n            mobileOpen={mobileOpen}\n            setMobileOpen={setMobileOpen}\n            tabletOpen={tabletOpen}\n            setTabletOpen={setTabletOpen}\n          />\n          <NavDrawer\n            mobileOpen={mobileOpen}\n            setMobileOpen={setMobileOpen}\n            tabletOpen={tabletOpen}\n          />\n          <Container tabletOpen={tabletOpen} />\n        </PrivateRoute>\n        <Route path='/unauthorized' component={UnAuthorizedAccess} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\n// Private Route Component\n// eslint-disable-next-line consistent-return\nconst PrivateRoute = ({ children, path, ...rest }) => {\n  const tokenExists = !!localStorage.getItem('token');\n\n  // User cannot directly open homepage if token doesnt exist in local Storage.\n  // It aslo redirects the user to login page\n\n  if (path !== '/login') {\n    return (\n      <Route\n        path={path}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...rest}\n        render={({ location }) =>\n          tokenExists ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: location },\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  // User cannot directly open login page if token exists in local Storage.\n  // It aslo redirects the user to homepage\n\n  if (path === '/login') {\n    return (\n      <Route\n        path={path}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...rest}\n        render={({ location }) =>\n          tokenExists ? (\n            <Redirect\n              to={{\n                pathname: '/',\n                state: { from: location },\n              }}\n            />\n          ) : (\n            children\n          )\n        }\n      />\n    );\n  }\n};\n\nPrivateRoute.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element).isRequired,\n  ]),\n  path: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nexport default Routes;\n","import React from 'react';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport Routes from './components/Routes';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#8FB7D6',\n      main: '#4796bd',\n      dark: '#3d97A8',\n    },\n    background: {\n      default: '#f3f9fb',\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Lato',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n    ].join(','),\n  },\n  spacing: factor => `${0.5 * factor}rem`,\n  text: {\n    color: {\n      veryDark: '#122e40',\n      dark: '#495d69',\n      darkGray: '#333',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport axios from 'axios';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\naxios.defaults.baseURL = 'http://imweb.ap-south-1.elasticbeanstalk.com/';\n\n// Add a request interceptor\naxios.interceptors.request.use(\n  config => {\n    // Do something before request is sent\n    const tokenConfig = config;\n    const token = localStorage.getItem('token');\n    if (token) {\n      tokenConfig.headers.Authorization = `Token ${token}`;\n    }\n    return tokenConfig;\n  },\n  error => {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}